{
  "code": 200,
  "error": "",
  "message": "",
  "data": {
    "records": [
      {
        "id": "1bcc3fa9d6fc44e1bdea42e9a43705b9",
        "createBy": null,
        "createDate": "2023-03-23 14:54:24",
        "updateBy": null,
        "updateDate": "2023-03-23 14:54:26",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null, 
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "监控-采集服务器温度和电源功率-test-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "ba7b7d7b1c9541d3a78011401836d823,bc004e02ca8e4edf90be16ebe4583a19,0f70891c61904297a6c4ccb0be1240e2,367c655d308b402881b862415da163fa,4cc5858889c74128bb350131e63dc11f,6dc4e6b3325949c7b001692282b78102,d3b0816eec9e44de92a9714a76062aeb,b0e44357a7e64f3d9cf5820ad8759854,c659913228764fc293063cc0e7c525c6",
        "hostCount": 9,
        "okCount": 0,
        "failCount": 9,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "监控-采集服务器温度和电源功率-test-脚本执行",
        "duration": 2,
        "executeDate": "2023-03-23",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "action_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n#调试打印变量：\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n#    var = \"test\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n#\t raise Exception(var)\n#result字典说明：\n#\t result[\"rc\"]: 0或1，0表示指令执行成功，1表示指令执行失败\n#\t result[\"failed\"]: 脚本执行状态(对应用status)，True或False,设置该值可以定义脚本成功或失败\n# \t result[\"stdout\"]: 指令执行成功时的输出数据(对应用originalMsg)\n#    result[\"stderr\"]：指令执行出错时的描述信息\n#    result[\"msg\"]：用户自定义的错误描述信息(脚本失败时对应detail)，如巡检CPU指标异常\n###################################################################################################\n# please edit your code here:\ndef main(self, task_vars):\n    \n    name = task_vars.get(\"ansible_name\")\n    model_type = task_vars.get(\"ansible_host_model\")\n    # 厂家\n    ansible_host_mfgr = task_vars.get(\"ansible_host_mfgr\")\n    \n    ansible_bmc_ip = task_vars['ansible_bmc_ip']\n    ansible_bmc_user = task_vars['ansible_bmc_user']\n    ansible_bmc_pass = task_vars['ansible_bmc_pass']\n    comm=\"\"\n    \n    # comm = 'ipmitool -I lan -H '+ansible_bmc_ip+' -U '+ansible_bmc_user+' -P '+ansible_bmc_pass+' sensor list'\n    # command = 'ipmitool -I lanplus -H 2409:8086:8612:90:0:0:0:13 -U gdinops -P xc23@#WE sensor list'\n    # comm = 'ipmitool -I lan -H 2409:8086:8612:90:0:0:0:13 -U gdinops -P xc23@#WE sensor list'\n    # raise Exception(\"name={},model_type={},ansible_bmc_ip={},ansible_bmc_user={},ansible_bmc_pass={},ansible_host_mfgr={}\".format(name,model_type,ansible_bmc_ip,ansible_bmc_user,ansible_bmc_pass,ansible_host_mfgr))\n    if \"inspur\" in ansible_host_mfgr:\n        comm = \"ipmitool -I lanplus -H \"+ansible_bmc_ip+\" -U admin -P v74#N9Mi682* sensor list\"\n        # comm = \"ipmitool -I lanplus -H \"+ansible_bmc_ip+\" -U \"+ansible_bmc_user+\" -P \"+ansible_bmc_pass+\" sensor list\"\n    elif \"huawei\" in ansible_host_mfgr:\n        comm = \"ipmitool -I lanplus -H \"+ansible_bmc_ip+\" -U \"+ansible_bmc_user+\" -P \"+ansible_bmc_pass+\" sensor list\"\n    \n    raise Exception(comm)\n    self._task.args['_raw_params'] = comm\n    result = self.execute_cmd(task_vars)\n    raise Exception(result)\n    return result",
        "scriptBase64Code": "IyB2ZXJzaW9uOiBQeXRob24zCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoj6LCD6K+V5omT5Y2w5Y+Y6YeP77yaCQkJCQkJCQkJCQkJCQkJCQkJCQojICAgIHZhciA9ICJ0ZXN0IgkJCQkJCQkJCQkJCQkJCQkJCQkKIwkgcmFpc2UgRXhjZXB0aW9uKHZhcikKI3Jlc3VsdOWtl+WFuOivtOaYju+8mgojCSByZXN1bHRbInJjIl06IDDmiJYx77yMMOihqOekuuaMh+S7pOaJp+ihjOaIkOWKn++8jDHooajnpLrmjIfku6TmiafooYzlpLHotKUKIwkgcmVzdWx0WyJmYWlsZWQiXTog6ISa5pys5omn6KGM54q25oCBKOWvueW6lOeUqHN0YXR1cynvvIxUcnVl5oiWRmFsc2Us6K6+572u6K+l5YC85Y+v5Lul5a6a5LmJ6ISa5pys5oiQ5Yqf5oiW5aSx6LSlCiMgCSByZXN1bHRbInN0ZG91dCJdOiDmjIfku6TmiafooYzmiJDlip/ml7bnmoTovpPlh7rmlbDmja4o5a+55bqU55Sob3JpZ2luYWxNc2cpCiMgICAgcmVzdWx0WyJzdGRlcnIiXe+8muaMh+S7pOaJp+ihjOWHuumUmeaXtueahOaPj+i/sOS/oeaBrwojICAgIHJlc3VsdFsibXNnIl3vvJrnlKjmiLfoh6rlrprkuYnnmoTplJnor6/mj4/ov7Dkv6Hmga8o6ISa5pys5aSx6LSl5pe25a+55bqUZGV0YWlsKe+8jOWmguW3oeajgENQVeaMh+agh+W8guW4uAojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBwbGVhc2UgZWRpdCB5b3VyIGNvZGUgaGVyZToKZGVmIG1haW4oc2VsZiwgdGFza192YXJzKToKICAgIAogICAgbmFtZSA9IHRhc2tfdmFycy5nZXQoImFuc2libGVfbmFtZSIpCiAgICBtb2RlbF90eXBlID0gdGFza192YXJzLmdldCgiYW5zaWJsZV9ob3N0X21vZGVsIikKICAgICMg5Y6C5a62CiAgICBhbnNpYmxlX2hvc3RfbWZnciA9IHRhc2tfdmFycy5nZXQoImFuc2libGVfaG9zdF9tZmdyIikKICAgIAogICAgYW5zaWJsZV9ibWNfaXAgPSB0YXNrX3ZhcnNbJ2Fuc2libGVfYm1jX2lwJ10KICAgIGFuc2libGVfYm1jX3VzZXIgPSB0YXNrX3ZhcnNbJ2Fuc2libGVfYm1jX3VzZXInXQogICAgYW5zaWJsZV9ibWNfcGFzcyA9IHRhc2tfdmFyc1snYW5zaWJsZV9ibWNfcGFzcyddCiAgICBjb21tPSIiCiAgICAKICAgICMgY29tbSA9ICdpcG1pdG9vbCAtSSBsYW4gLUggJythbnNpYmxlX2JtY19pcCsnIC1VICcrYW5zaWJsZV9ibWNfdXNlcisnIC1QICcrYW5zaWJsZV9ibWNfcGFzcysnIHNlbnNvciBsaXN0JwogICAgIyBjb21tYW5kID0gJ2lwbWl0b29sIC1JIGxhbnBsdXMgLUggMjQwOTo4MDg2Ojg2MTI6OTA6MDowOjA6MTMgLVUgZ2Rpbm9wcyAtUCB4YzIzQCNXRSBzZW5zb3IgbGlzdCcKICAgICMgY29tbSA9ICdpcG1pdG9vbCAtSSBsYW4gLUggMjQwOTo4MDg2Ojg2MTI6OTA6MDowOjA6MTMgLVUgZ2Rpbm9wcyAtUCB4YzIzQCNXRSBzZW5zb3IgbGlzdCcKICAgICMgcmFpc2UgRXhjZXB0aW9uKCJuYW1lPXt9LG1vZGVsX3R5cGU9e30sYW5zaWJsZV9ibWNfaXA9e30sYW5zaWJsZV9ibWNfdXNlcj17fSxhbnNpYmxlX2JtY19wYXNzPXt9LGFuc2libGVfaG9zdF9tZmdyPXt9Ii5mb3JtYXQobmFtZSxtb2RlbF90eXBlLGFuc2libGVfYm1jX2lwLGFuc2libGVfYm1jX3VzZXIsYW5zaWJsZV9ibWNfcGFzcyxhbnNpYmxlX2hvc3RfbWZncikpCiAgICBpZiAiaW5zcHVyIiBpbiBhbnNpYmxlX2hvc3RfbWZncjoKICAgICAgICBjb21tID0gImlwbWl0b29sIC1JIGxhbnBsdXMgLUggIithbnNpYmxlX2JtY19pcCsiIC1VIGFkbWluIC1QIHY3NCNOOU1pNjgyKiBzZW5zb3IgbGlzdCIKICAgICAgICAjIGNvbW0gPSAiaXBtaXRvb2wgLUkgbGFucGx1cyAtSCAiK2Fuc2libGVfYm1jX2lwKyIgLVUgIithbnNpYmxlX2JtY191c2VyKyIgLVAgIithbnNpYmxlX2JtY19wYXNzKyIgc2Vuc29yIGxpc3QiCiAgICBlbGlmICJodWF3ZWkiIGluIGFuc2libGVfaG9zdF9tZmdyOgogICAgICAgIGNvbW0gPSAiaXBtaXRvb2wgLUkgbGFucGx1cyAtSCAiK2Fuc2libGVfYm1jX2lwKyIgLVUgIithbnNpYmxlX2JtY191c2VyKyIgLVAgIithbnNpYmxlX2JtY19wYXNzKyIgc2Vuc29yIGxpc3QiCiAgICAKICAgIHJhaXNlIEV4Y2VwdGlvbihjb21tKQogICAgc2VsZi5fdGFzay5hcmdzWydfcmF3X3BhcmFtcyddID0gY29tbQogICAgcmVzdWx0ID0gc2VsZi5leGVjdXRlX2NtZCh0YXNrX3ZhcnMpCiAgICByYWlzZSBFeGNlcHRpb24ocmVzdWx0KQogICAgcmV0dXJuIHJlc3VsdA=="
      },
      {
        "id": "0148923893c54d618b5e03c07f7d39c4",
        "createBy": "10149",
        "createDate": "2023-03-23 11:39:12",
        "updateBy": "10149",
        "updateDate": "2023-03-23 11:39:22",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "console密码修改完整版-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "89cb23607a50496ea8149ab58ca69ac4",
        "hostCount": 1,
        "okCount": 1,
        "failCount": 0,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "console密码修改完整版-脚本执行",
        "duration": 9,
        "executeDate": "2023-03-23",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "forward_online_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n# _task.args字典说明\n#     command: 发送到远端网络设备的命令。\n#\n# result字典说明:\n#     failed: 布尔值, 命令是否执行成功。\n#     stdout: 命令的标准输出。\n#     msg: 命令的错误输出。\n###################################################################################################\n# please edit your code here:\nimport re\nimport json\n\ndef main(self, task_vars):\n    # raise Exception(task_vars['ansible_network_os'])\n    host_model = task_vars['ansible_host_model']\n    \n    result = dict()\n    if host_model in ['ce12800', 'ce68', 'ne40e', 'ce16800']:  # Huawei RS\n        result = HW_RS_change_passwd(self, task_vars)\n    elif host_model in ['ZXR10 5960-72DL-H','ZXR10 9908','ZXR10 M6000-8S Plus','ZXR10 M6000-18S','zte_9900', 'zte_59', '5952D','m6000','M6000-8S Plus','5900','ZTE-5960','5960-56QU-HC','ZXR10 5960-72DL-HM','ZXR10 5960-56QU-HC','ZTE-M6000-8S plus','ZTE-9916']:  # ZTE RS\n        result = ZTE_RS_change_passwd(self, task_vars)\n    elif host_model in ['Eudemon9000E-X8-AC','Eudemon9000E-X4-AC','Eudemon9000E-X8','Eudemon9000E-X4','HW-Eudemon9000E-X4','HW-Eudemon9000E-X8']:  # huawei FW\n        result = HW_FW_change_passwd(self, task_vars)\n    elif host_model in ['S6850-56HF','S6900-54QF-F','S5560X-54C-EI','H3C-S5560X-54C-EI']:  # H3C RS\n        result = H3C_RS_change_passwd(self, task_vars)\n    elif host_model in ['S12508F-AF','S12516F-AF']:  # H3C Gaoduan RS\n        result = H3C_RSGD_change_passwd(self, task_vars)\n    elif host_model in ['M9016-V','M9008-S','h3c_m9008','CR16010H-FA']: #H3C FW\n        result = H3C_FW_change_passwd(self, task_vars)\n    elif host_model in ['s4320', 'S4230-54TXF', 'MAIPU-S4230-54TXF']:  # MP\n        result = MP_change_passwd(self, task_vars)\n    elif host_model in ['RG-S6250-48XS8CQ','RG-S6510-48VS8CQ','RG-N18010-X','RG-N18018-X']:\n        result = Ruijie(self, task_vars)\n    else:\n        result = not_support_dev_model(host_model)\n    return result\n\n\ndef not_support_dev_model(host_model):\n    return  {\n        'failed': False,\n        'stdout': \"该巡检项暂不支持{}设备\".format(host_model)\n    }\n\n\n# 'ce12800', 'ce68', 'ne40e', 'ce16800'\ndef HW_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis curr \n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['be written to the device.']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n#'Eudemon9000E'\ndef HW_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Warning: The current configuration will be written to the device']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n# 'zte_9900', 'zte_59', '5952D'\ndef ZTE_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef H3C_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n##高端H3C设备\ndef H3C_RSGD_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\ndef H3C_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef MP_change_passwd(self, task_vars):\n    str1=\"\"\"\n    show running\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"enable\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['password']\n            self._task.args['answer'] = ['Nfv@1#2%']\n        elif \"write\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Are you sure to overwrite .*']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\ndef Ruijie(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n",
        "scriptBase64Code": ""
      },
      {
        "id": "1c4e95347010463facccf5d8255057e5",
        "createBy": "10127",
        "createDate": "2023-03-23 10:10:24",
        "updateBy": "10127",
        "updateDate": "2023-03-23 10:10:47",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "监控-采集服务器温度和电源功率-test-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "ba7b7d7b1c9541d3a78011401836d823,bc004e02ca8e4edf90be16ebe4583a19,0f70891c61904297a6c4ccb0be1240e2,367c655d308b402881b862415da163fa,4cc5858889c74128bb350131e63dc11f,6dc4e6b3325949c7b001692282b78102,d3b0816eec9e44de92a9714a76062aeb,b0e44357a7e64f3d9cf5820ad8759854,c659913228764fc293063cc0e7c525c6",
        "hostCount": 9,
        "okCount": 0,
        "failCount": 9,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "监控-采集服务器温度和电源功率-test-脚本执行",
        "duration": 23,
        "executeDate": "2023-03-23",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "action_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n#调试打印变量：\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n#    var = \"test\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n#\t raise Exception(var)\n#result字典说明：\n#\t result[\"rc\"]: 0或1，0表示指令执行成功，1表示指令执行失败\n#\t result[\"failed\"]: 脚本执行状态(对应用status)，True或False,设置该值可以定义脚本成功或失败\n# \t result[\"stdout\"]: 指令执行成功时的输出数据(对应用originalMsg)\n#    result[\"stderr\"]：指令执行出错时的描述信息\n#    result[\"msg\"]：用户自定义的错误描述信息(脚本失败时对应detail)，如巡检CPU指标异常\n###################################################################################################\n# please edit your code here:\ndef main(self, task_vars):\n    \n    name = task_vars.get(\"ansible_name\")\n    model_type = task_vars.get(\"ansible_host_model\")\n    # 厂家\n    ansible_host_mfgr = task_vars.get(\"ansible_host_mfgr\")\n    \n    ansible_bmc_ip = task_vars['ansible_bmc_ip']\n    ansible_bmc_user = task_vars['ansible_bmc_user']\n    ansible_bmc_pass = task_vars['ansible_bmc_pass']\n    comm=\"\"\n    \n    # comm = 'ipmitool -I lan -H '+ansible_bmc_ip+' -U '+ansible_bmc_user+' -P '+ansible_bmc_pass+' sensor list'\n    # command = 'ipmitool -I lanplus -H 2409:8086:8612:90:0:0:0:13 -U gdinops -P xc23@#WE sensor list'\n    # comm = 'ipmitool -I lan -H 2409:8086:8612:90:0:0:0:13 -U gdinops -P xc23@#WE sensor list'\n    # raise Exception(\"name={},model_type={},ansible_bmc_ip={},ansible_bmc_user={},ansible_bmc_pass={},ansible_host_mfgr={}\".format(name,model_type,ansible_bmc_ip,ansible_bmc_user,ansible_bmc_pass,ansible_host_mfgr))\n    if \"inspur\" in ansible_host_mfgr:\n        comm = \"ipmitool -I lanplus -H \"+ansible_bmc_ip+\" -U admin -P v74#N9Mi682* sensor list\"\n        # comm = \"ipmitool -I lanplus -H \"+ansible_bmc_ip+\" -U \"+ansible_bmc_user+\" -P \"+ansible_bmc_pass+\" sensor list\"\n    elif \"huawei\" in ansible_host_mfgr:\n        comm = \"ipmitool -I lanplus -H \"+ansible_bmc_ip+\" -U \"+ansible_bmc_user+\" -P \"+ansible_bmc_pass+\" sensor list\"\n    \n    self._task.args['_raw_params'] = comm\n    result = self.execute_cmd(task_vars)\n    raise Exception(result)\n    return result",
        "scriptBase64Code": "IyB2ZXJzaW9uOiBQeXRob24zCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoj6LCD6K+V5omT5Y2w5Y+Y6YeP77yaCQkJCQkJCQkJCQkJCQkJCQkJCQojICAgIHZhciA9ICJ0ZXN0IgkJCQkJCQkJCQkJCQkJCQkJCQkKIwkgcmFpc2UgRXhjZXB0aW9uKHZhcikKI3Jlc3VsdOWtl+WFuOivtOaYju+8mgojCSByZXN1bHRbInJjIl06IDDmiJYx77yMMOihqOekuuaMh+S7pOaJp+ihjOaIkOWKn++8jDHooajnpLrmjIfku6TmiafooYzlpLHotKUKIwkgcmVzdWx0WyJmYWlsZWQiXTog6ISa5pys5omn6KGM54q25oCBKOWvueW6lOeUqHN0YXR1cynvvIxUcnVl5oiWRmFsc2Us6K6+572u6K+l5YC85Y+v5Lul5a6a5LmJ6ISa5pys5oiQ5Yqf5oiW5aSx6LSlCiMgCSByZXN1bHRbInN0ZG91dCJdOiDmjIfku6TmiafooYzmiJDlip/ml7bnmoTovpPlh7rmlbDmja4o5a+55bqU55Sob3JpZ2luYWxNc2cpCiMgICAgcmVzdWx0WyJzdGRlcnIiXe+8muaMh+S7pOaJp+ihjOWHuumUmeaXtueahOaPj+i/sOS/oeaBrwojICAgIHJlc3VsdFsibXNnIl3vvJrnlKjmiLfoh6rlrprkuYnnmoTplJnor6/mj4/ov7Dkv6Hmga8o6ISa5pys5aSx6LSl5pe25a+55bqUZGV0YWlsKe+8jOWmguW3oeajgENQVeaMh+agh+W8guW4uAojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBwbGVhc2UgZWRpdCB5b3VyIGNvZGUgaGVyZToKZGVmIG1haW4oc2VsZiwgdGFza192YXJzKToKICAgIAogICAgbmFtZSA9IHRhc2tfdmFycy5nZXQoImFuc2libGVfbmFtZSIpCiAgICBtb2RlbF90eXBlID0gdGFza192YXJzLmdldCgiYW5zaWJsZV9ob3N0X21vZGVsIikKICAgICMg5Y6C5a62CiAgICBhbnNpYmxlX2hvc3RfbWZnciA9IHRhc2tfdmFycy5nZXQoImFuc2libGVfaG9zdF9tZmdyIikKICAgIAogICAgYW5zaWJsZV9ibWNfaXAgPSB0YXNrX3ZhcnNbJ2Fuc2libGVfYm1jX2lwJ10KICAgIGFuc2libGVfYm1jX3VzZXIgPSB0YXNrX3ZhcnNbJ2Fuc2libGVfYm1jX3VzZXInXQogICAgYW5zaWJsZV9ibWNfcGFzcyA9IHRhc2tfdmFyc1snYW5zaWJsZV9ibWNfcGFzcyddCiAgICBjb21tPSIiCiAgICAKICAgICMgY29tbSA9ICdpcG1pdG9vbCAtSSBsYW4gLUggJythbnNpYmxlX2JtY19pcCsnIC1VICcrYW5zaWJsZV9ibWNfdXNlcisnIC1QICcrYW5zaWJsZV9ibWNfcGFzcysnIHNlbnNvciBsaXN0JwogICAgIyBjb21tYW5kID0gJ2lwbWl0b29sIC1JIGxhbnBsdXMgLUggMjQwOTo4MDg2Ojg2MTI6OTA6MDowOjA6MTMgLVUgZ2Rpbm9wcyAtUCB4YzIzQCNXRSBzZW5zb3IgbGlzdCcKICAgICMgY29tbSA9ICdpcG1pdG9vbCAtSSBsYW4gLUggMjQwOTo4MDg2Ojg2MTI6OTA6MDowOjA6MTMgLVUgZ2Rpbm9wcyAtUCB4YzIzQCNXRSBzZW5zb3IgbGlzdCcKICAgICMgcmFpc2UgRXhjZXB0aW9uKCJuYW1lPXt9LG1vZGVsX3R5cGU9e30sYW5zaWJsZV9ibWNfaXA9e30sYW5zaWJsZV9ibWNfdXNlcj17fSxhbnNpYmxlX2JtY19wYXNzPXt9LGFuc2libGVfaG9zdF9tZmdyPXt9Ii5mb3JtYXQobmFtZSxtb2RlbF90eXBlLGFuc2libGVfYm1jX2lwLGFuc2libGVfYm1jX3VzZXIsYW5zaWJsZV9ibWNfcGFzcyxhbnNpYmxlX2hvc3RfbWZncikpCiAgICBpZiAiaW5zcHVyIiBpbiBhbnNpYmxlX2hvc3RfbWZncjoKICAgICAgICBjb21tID0gImlwbWl0b29sIC1JIGxhbnBsdXMgLUggIithbnNpYmxlX2JtY19pcCsiIC1VIGFkbWluIC1QIHY3NCNOOU1pNjgyKiBzZW5zb3IgbGlzdCIKICAgICAgICAjIGNvbW0gPSAiaXBtaXRvb2wgLUkgbGFucGx1cyAtSCAiK2Fuc2libGVfYm1jX2lwKyIgLVUgIithbnNpYmxlX2JtY191c2VyKyIgLVAgIithbnNpYmxlX2JtY19wYXNzKyIgc2Vuc29yIGxpc3QiCiAgICBlbGlmICJodWF3ZWkiIGluIGFuc2libGVfaG9zdF9tZmdyOgogICAgICAgIGNvbW0gPSAiaXBtaXRvb2wgLUkgbGFucGx1cyAtSCAiK2Fuc2libGVfYm1jX2lwKyIgLVUgIithbnNpYmxlX2JtY191c2VyKyIgLVAgIithbnNpYmxlX2JtY19wYXNzKyIgc2Vuc29yIGxpc3QiCiAgICAKICAgIHNlbGYuX3Rhc2suYXJnc1snX3Jhd19wYXJhbXMnXSA9IGNvbW0KICAgIHJlc3VsdCA9IHNlbGYuZXhlY3V0ZV9jbWQodGFza192YXJzKQogICAgcmFpc2UgRXhjZXB0aW9uKHJlc3VsdCkKICAgIHJldHVybiByZXN1bHQ="
      },
      {
        "id": "b276af278af448f884a5309281aaf01f",
        "createBy": "10171",
        "createDate": "2023-03-22 18:07:50",
        "updateBy": "10171",
        "updateDate": "2023-03-22 18:10:16",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "show run",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "09f7dd1ac8c142d18cec7699c98aecff,0fb0f9ad827d4ec38c38a07b44e93e2a,2026f287717a4e01a6f023a2772563f6,2bc489c3a8cd4e7fb448f5dd0312dd19,35a2ad043b034438b177da51d79f5e4c,3b3fbc9780a54396b6e35cae5a738232,3f44d531d03d42358b1ef7529a86abdf,4d7705392e9f47018e529e8187e2589b,5e6ac839fa1641f08d0c652010981335,665279690db947d5ace3826e18f58b6f,6fa611bb2aa74b72b4d0595198b4bc9c,7853f4cde1464d9ab020d060262e8097,88ff5422590b424e930f359ab9609fdd,a003d27b1b7b4d8dbaf42e5f35980187,b7094ce355c244bd98232f0e97d0e62d,c5ac300359264775bc17672552327aa2,ce6de62560c943f999386607e1134de9,dc51bab085064159b67d8f73acc81442,e3abfcdfa3c7459f9e0b223f803ff9ad,efd0a53c05ce428b82525a3ac8ba8a2f,f8832707938f4cdb93d98cb168e0c718,067fb999092f492faa964302c7a7a543,0c49c49c3146453fb46b40f529eabfcc,1fd40fab339247469d4ae0761c19b430,2afecbb695c84436af3f6aa9777b3297,34f314971ff74db88ef1cfb2e2c475da,395e51d1ecf149e896e2abf0134c2d93,3df21e6722494a32a57684ddfbb4d593,4a1784d8c1e14e6ebceea9a377a04ecd,5c13b49d5a8449f0adeac81a29bb4cfb,615bafae85854cc6a19a4f8c14929965,6f119044fe7a477fb97944d14bcd7672,763183ae60ad4555a0c1fafaf85e8c30,84a7926fe9844547af663b9cc23528d8,9848e0ca4e284355aacabc6d16ded99c,b39e496ac7a24ee5a37e07296251d08d,c2ecc4f8179144189222570129aadadc,cc93d5eab17d4fd0bf84919a67cb6e6c,d90c867c51674d55bb9a8ccc20841a60,e2d802518ce241eeb6d6f08e5cc87304,ea6baf93062c4a109a84b9ba35f863cf,f72f15eee6894d319273cabbc3ae358b,011206f4b0844eb785c5aeef6e609ce4,0b3ee6c4ad8643ffadc9c696f73babb3,180713a1d198446ca1e8defdb378cbad,253483dc8ada4ae3979aa7bad29c5f38,3380545c371442f6a357c72f4b841881,38e394c5a021492da72179d8da07fa8e,3bb4ebcfaa8f43c9955557433517b9be,49ccf2597ac347e7af2758548551936a,5c0d30e8dfdf4ff6865739469b583dec,5fe6018417e8492a8c82aafaf1cc4ae0,69bca2a496b04767bbeaea6a5bcc083d,7161aba15dbc455788933ec9009ee6d7,816482e6e5dc46aca35988df215f5954,980eb388e38c453380b79852f6392aa9,b0fea30bf8c047b7bfd7c9767200b58d,c17d18d962cb49bfa16028675a832d0f,cc00890f7de742cc912e3cb79cba4cb5,d41195cd1d4e4a39843bb965cddf4475,e1e002b5aa8148989e907a3af5e1fd9c,e9266bc3928b4b7b97abf03b9cae3f22,f4a4cd77f1ba4fdfa4691026a771cc56,0969d3e9ea2343039a714d3bfe37865f,17832922a0b14dd3b2b16acdea380ed9,2c8d7e5ef99341529fe6efe424523e72,4a01648883454e83ab1bbe055600f1d5,6872c318d612443a8f800c9cdb32b881,7d2e7c2b20ad4efbb232237149649b65,91ef117dfdab44e79329b65ea2d7088c,a01427fd3d83428fb7a5525be5e27964,bfa1b143c7b34e75b88425fd1c4d29ae,ca3db11d8c0743dda4d1fccd163d4c51,df17e80bd7e1454fb36234b2202b9de6,f0fda7878eee4bb3922d20b6bb9b1988,0f803d1b3bd343b6bc5a64e0855836cd,2b000743c0f74165a838e3b5bb82b18c,2e510c4e6ed94901bd209d750e666aa2,3e8541c78df94421b31ed546b332005f,4516121211444d8687aa6d76c0a99276,4936d93f2dbb4543aa3cfb9a90520f3c,6a1b41752cd44aa0be8d97568b55ffd9,7da56ef8760644e385463c60e22b4d06,9b044a4cc1d24b45bad07259b307bda3,9fc34abdd5e14f3ea9eb4230a8f6cc25,b2132a6092b34ac997e28353f10ce6f5,bf248c2a0dd9445f88045fdba4c04ffe,d19761bfd79b4217999b11225c63a6f0,e60be59160cd4af680c42162af96ecc0,fab71acf5cd341e795b8d2b1efad5455,04523c0edd4d4dc4a31139844da96ec0,0d77c27875954908bd8ae43fbb7d156f,10caca2a2b2d4fa89f9b047aa8e1bdfe,16af04e95cab42019c6d18a401d63172,18f4f1dddd5e4491bdd7bd85adea6329,200ffafbee2940a3a2a831d1b5d5c688,27b00331cd704326a02936da4e46933b,2a21799f3a894cd280b580024e592e20,2abb9fe906934e8193d84d58057f0657,2ee51e2442154bf69a4b67af1c993d70,35496be282a3489f82d9681e78f76303,3f5f8476f1f14d4a82fc6437e413ad92,44f61cbb57ca434db8df6bca3ccb4e9c,4c12fece6eb6474eb23be2981ea98405,4ffb0f36fbd94d039038f5356be8694b,570e91350c474c66841c95ba9f2b5e03,5969018d69d047a99f6bb5b04764484a,5ea54f05cbaf4ce4aa4ac1763de014fe,66a39106f9384e4bb1082daf6e92ae57,6de4aefa46ee437b957697b93542ca8a,7a0430270d864eab8698014d9b2acf96,8469af34900c4a48b129a78fad31da0f,8809c46c93b6479e8227cd6cb454276a,8a3a6053e78d43ea9bc337dc7ddbaf36,939f13aa16c2417186fe4fe8c8b45af1,970b481760154227870e6ba2ce05873a,99bc13cd960c438085a8da672957d3c7,9e7fadf546064d94a5bfdec6dfc1b612,a0a3403b6b99488182997d04a22fdcb6,a26c5b84cf124b63b3baa314d4411f74,a6324cfb3f504037b58a8508ac0008ad,a823ec3e611b47b7bb833569582339df,ac68a3219ea54a258e15217605b54213,b19ee56679e2499aa9cb824e35f64d24,b5584297be9a4026a04c57ed6f409258,b7ad4579dc224568b4025d8d6ef39506,bc18d6f1780d42fb85c8cb9d977e0e1d,c2dd8b06bef1493bb2513457d207d641,c8277e6a088040fa985e10d9d736fe0c,cb3ada137e3d4aafb23d48700ebd091d,d14b714d979548b7a1563cc8faf5781f,d89e180355fb406c9276fbeab5c3c954,da8086a912e64ec5a0242e740406f326,df09cff0909d46c5b2b2db5f2cbefadf,e224f4b7eafa4a0c8883d6318344bce3,e504c53d131d48a4a926ea2f8420c61d,e6fda6ad4dba417ba76df14273000c7d,ea41acb3ddab4f58b3a98e0f007d51de,efdee2cc68c74ec3869e4e7f8becc73f,f9507145c9f24c88af06a628da3b8d27,055b88cc806d4cdeb5f4393d9575e1c5,0ee4b6dffd7b4ccd8ba688cc1cd40bed,12208cc7b8d240fa82d5f89ef61d8bfc,16d1400bb5cf4dfc9dc52a1247000ee9,198292f663934deda9dd587d73bab57a,202336d4623546b8b5f158fb5d04bc2e,28c77e27a2f9422b97ed936820c2f9d1,2a46499892dc4923bae4330ebd5f28ae,2ae4a999e41b4ed9a0f3d21c67b740e4,2f0492c3b2f94f06b08f2941b04ac82d,3b40aac04f644373b61fa97e174515e7,3fe881716f2a438689afefdd10edb8bd,452529f810b5420a801c94d641bfb2a1,4d8332923b934f7b8b3015e25486d6f5,507cab66e70e4614b27c982e3fc85adc,57581f7432114675bfd7c65538e2f6ed,59feaab086b74d799767e73b8f0240de,6339c7cb82c141f899cb1dabdae75dd1,67eb8c607c28422ba9cbd21e35eca70b,6eab918b064245469c6e186a2e7f2c25,7a0a4597d69d4aae9690bf5418a160a4,85b13823f73940978cf740049e7f9469,88b519911f514772953e6f813dfe7f56,8a3aaf2619004be29ed3a744e96abd47,93f1f4e9caf648358b70887d0aee8913,975e2e03ddd34ebfb155045e0ac01676,9a89a9bed5d74a4c9e86c5e356198244,9eb34d89d4384f44a52ff4a2a6237828,a1b7975aacf94a94b1eda845a14d24e1,a2cf2c9ece4c423c907336a40717e052,a6f9fdd975e041c39a7f46cf7947953f,aa4fa5a33f444e58bcb3f89887ed8f3f,aea17a3accca4c82af63c6677eaae2d3,b20d196f8bba4cd180de5b773508d059,b59031020d534c3bb94ab9ac88a4c098,b8955fac5c8e453b87c345c44846bc24,bc71a59e4c104f40a09d4a6960a385f4,c508c96c96e9490eb1f6fc8bd6c6ff7c,c895f5a79dd74b2fa5daed7fa4812ecf,cd25582f9f6e4719ac3c2b6bd2c0bf9c,d28040cf14da46bdb8f1c5ad82065f10,d8aa7b6804ae489bb1bb42edfe53f0e0,dcd1fe04adb148bb9fa8f9119089e205,df54b32d14b24f8fa28edb41cddc7dc0,e2f2c51e31cb4c9c88628c92cf45ae1c,e59b5b61f40f4e878488ea4fbf293cbd,e76297d8c632402b9243e6c21f060f48,ec6a0490c90c4cac8853a61b51d8bbab,f1ae41c9b2a547a18da8cb1626b94a3c,fdd7895114aa4b9f9c0917a47a5e9a6c,06b316346b72468ea4c96284f598cc7b,09d73d38d463424a8b6a27a6cb88996f,0fefb511224c4d588ea186e239885abd,167759a52b8e486a8c76b7c7628f4fce,1a148e0b0db24b2b9a72dad166c94686,203608919d174f2389997b6c27edeaa0,2976a6b7e90e40bea77f70d17fae2f98,3385f691b9f04adda39b0eca4d87e62a,3fdc0e2d7ffc45739cf699d82729a03d,46c08a26325e4877a92e21813f12030b,4a07a5b7c7e04b9da74f4ddaf2a98823,56dc46509c5a46608f2ad185b7e905ed,63996d40d2924ea5af3128911431bf95,6e9f9352374d4e90955c24cb73f48c42,74c6c12ef60e45b7bb019621b04450c9,8419a01d28244431b6c6609007890bfe,8b552ee6025a4f44b1107a125c79fe92,92601edec21d4223981373fb643a33cd,9fb939065bd2446fb997c0e2a8c39557,a558a1f447234a598b9f3a33977d4c9d,aacdf2bdb36b4e44bd212a69542e0e2d,b2f0bed41ffd441fb5ad4b0a65b5af2c,bb58efc63aa84f1a988da8d774250f62,c51385d3d72c41779d0ab17779922f8e,ca22918683fb4eec91e48b8143acd410,da21ec052b69471ca542f13374fc69f5,dd906e60fa2d42b9a1687d92e22752c7,e39e8c719b7246edbda70dae6952f05a,ec7afa5fe8ca403aab6d1025a39e3341,f4ab5106df344a7aab9d2751bfc9c9d6,fc62e5c18b8d44fe8708f4dd8075fbc2,00b61bac57e1472986efcfb7cd3b1aba,07f5b0f883624b879efab45bbd6c5f7b,10943df7ca854c1fb934fd2de3a45b65,146378d670fe4f4ba30b426d222e6a8f,17137e24a9ab405fb5792c2b618a6740,1ba82ae7d01c4cc7b7b0faba9431eb44,254594258d3b406389b21422bdfa8f54,2932cf5c84334c9a8803f82ae80bda1c,2a7bc3500c0944eba4f5a6b0fef9a5db,2b7f7e5832e548c093c4212a74fcbfdb,2fbfa63c9db7455aa542108eb09092b0,3d048a75302a458d8ffb2499f1fa0554,4428feb9856542bbab9b872b56e247de,489babef5d644e0eb2f9bffb4f9d3cef,4df195ec7ad343e1ad34ab707333e8c6,564e892f579d473fa089bb2c467a067e,57bb24d422c6484eace00cdb0a3c5ee5,5d7aed80f51f41ae98059650bc2fcc04,63de575ab5db4795b3d68a8b62e194df,6a6b75f17a3248d29a5d98f317aa18e5,6f76b06fa8fd4904afd3292212e16462,7f380a69ff044d28b6a3ee70b4cb4b66,865f74c964fa4840b49b9ecca473e479,899b5aa074894a3db0b5198ae9a1506e,8df30d3446ae48beb760f10d9ceb96e3,94583feb60e8465aa38126cfcf4de4f5,98789834adb04bf9965f9969e114ebb0,9ba120c0cfa14a69b4c178c80bb912fa,9f59464fb4584bf2a3aba67f2c6225ed,a1c760967a2d496482c35ba1c321f7c0,a38c894082c446d4930d66fb103fee52,a760f1da7a9b43e5a57f15df48d5142d,ab3586b8d2c64352afca6e9567aa50b0,af4ce5b39f324e99ac083d77e60bba99,b27bb90c8f5a42e49894d69a4c653747,b6496193173c4844ad6df56b67b536be,bb0ae05a19134f7d86f7224c207bb99d,bcd7493d3699463783adad3d4c20755f,c552b6d4de114d32a67b6c6407020514,c93832fabfa04d3bb8de56407149d6f2,cf4025f6c0104b43abbc8407b96ee1fa,d4ee03d16bff4436883849587d2faf46,da2788896bdf4d9886bb028b6df88b99,dcddb953790b4bbabfd54c1774bd5046,e04f32d2599f425e83ec064e3616fd04,e39d06efd9c449e1a58f727fe035cd16,e603f6d178df4750acb2b4217666fb04,e9159c8976ff430cb2c18c4bcebadea1,ee3a9b6e8f15467197a9bb9ba1eadf14,f4cc6aea5c944bf6ab4fdcc1a9d0b56b,fde6531359114cd6a18091648c3773d6,0671709ece6f4dee8f03480f0e459072,0bd7f0ceab24461a9b4ec9b2b8f91e2f,19c517c7da18458eacbd7519ee05a2ea,267883f43c20468db5f04fa8f2c8373d,2bd82ae8bd4f49e9aafb7af08c2dbca7,31f58dd285bc4bfe865e60942eb2e942,35d90d4998404e2e93148916b756c848,40777dfd75eb4164ba567a9ef35c3d31,4b4c8a5ba4934160a797ddead082f7cf,4fbac9db3ac8423ea2e90155416e1851,5797c895e05d487482d763a8354e5d03,65d14611cee24646a8c1cda81bc68397,6a46b2f8c11b4883a6ed56b9d4c5c34b,72dfd920edf2422db35d11a874fac825,82ec44cec6e24cddacafc33a747ceac3,9587007a7a10492ea36c7b7f39563e38,ab2ce7ee5d674c28b85e0dd7c14e083b,acfd95dfade84ffd8f54df93796e1bf3,b807b2bfa58744f8adc7337388bd07ce,c5ea7daff2bc41b4a99081d99cf9f6df,d01b1f56ccc34b5fa0cb48a292382192,e1a9081d4c91449e8aa8c828a4d19d58,e4cc5747a9534c7e8d01513391e8603b,e60fe64fc41c4edfad71060f9fc00e6d,f2e6cd41df20452abc634ab7d2c623a5,027376762bc44c4495cde1a8913572ec,0a1cda302cb34000a9fe661016612b62,10c0564123444c329beb0b1deb35b9db,1501bcead26e413b991a0be8a89c43a7,18bb10aa72c045998271aa3987ea25aa,1bede0f905ab4ce4acd8383e9f028af9,2694831a175b4d4ba0c9af8b035c7624,2a188d000b95436ba6fb195245118f44,2a7c0cc6305a4d5890ddd6d9c4e9b99e,2c677fc3c51c4d4faf8e1dae4dd0cdef,31ffd6b2d786411ab509d17d7b24e49b,3f1aedddbb99436bbeb18781e76e6e10,448337cb830d45958c9fe5b347aa7631,4b7157a40b57400396f690b710f92b5c,4f520e881e524f1184e2670cb66be844,56caf9865cc840b6a31556e852a62d19,580e8ea8a68b409c84810d295759e196,5e88dcd47cc64e3a90fed9cf3cd8726b,6684f51fc0d84473b7bfc6a9080ec2f7,6c87806124244bfb9a83ff84009cb4ee,709b3f33658b4e0e88244aacc0244edb,7fb3d096792442fea3a2964fcf7acc8b,8708ff6f854340f9a954ed56d082ce4c,89ccadff635b4b20a3d46a83a5bf8c5c,8e072ab266894e908798dfc3414ecbf9,96224731e39445e5ac6c6ee538754303,98e63c7c90ef44db8164914269f1242d,9c162727bfb54ed7ae3f4957739ad379,a0599168e21e42f6b183755dc82bbb5a,a20a675e711048fba72ac3cf1b0a4d5a,a42561585b72455ca9b0277ba656aec9,a80e00ac82a6444cae4a558d9532abfd,ab6b861463bd4976961b6445d2b06de4,af67bfd446664d3aa8a93ac24b545832,b455a623483d460c8428bce5930a025f,b78a0925885744abb1cdc26b9563340a,bb824739d3a04121b85e027d571293e5,be41db7afde040a0bbdd684030dc9dee,c6eebe604bf6454ea7497529b3321ffe,ca7521b5480e425192b81fdc9e58c1e8,d097051d676240a08c0f78a77e711dcb,d79ceeb80a2d4e5981cc7defdc60a6ac,da64bf0905f444b2bf3cf63689991b10,dece25585f2e477798436e161e748073,e0ac3ed4b058410481d9c7e04ba29274,e40607b9ba274d19a0b6e2cb51da89ae,e6936933c94342ba85b1267c93be34f4,ea32d0e51c3c43aa9f347004e429efc3,ee6e0bd2c7e44a9eb797a54c46d5f249,f6bc0517ac4e49288962201b63ab2404,fe8e1c6fc3b64092887b590cb4844ff5,021cfedd589647118cf61cadf4748c38,0da3f4f37650441db67c28c0103059d6,16eb04e0ebb84cd48621b320d0de062e,200bbab8ff1e4ddea04ea2be6e4f55ab,3151e6a784c4474799f1892733fab237,3e1cd2d3e8704a2f990e65a2feeca1d5,4d8081f7ec9d423a989adc7940f1a17c,5ca8228983084c4ab5915ed7b7392bb0,64fea4c0406d4b479195fdefc17f151f,6b95c7be23ee4cb397a51c1def6208b3,7771df29a0664e7499de1739ac9243cd,7b930cc3c07a4fbd85d456fa0ac15a34,858b94b62d8b4c519f7d9eb094260875,a111f9469a164e17934719fd24f43744,ae1d84f7cccc40a2996a11f36e3bf801,bb5af497cccc43aa9c9b27f692b316b7,cd51e0ec7bfa4b508843f50301215135,d958b00ab37c45e0a5aaf7d0c9cfa46f,e001f41272994c15be3a04ee059e45ae,f1be17f7a3924e7da39eaca4926de48b,f7e335916fe247e4983b85480f397be4,fdb6cc4b18b54778ba4548df19fc0707,015d1814576c42888053cd7f13e51d7d,0d58827a7e6548a2b44f04397107b623,16a7142e9c574a3882f5a354f1d9276e,200694ecd0554452a88ffdd766feccdd,3011b8525c87447eacb4d5b42294ec88,378319de67b346d9895dff8dedad6ab5,4bf77dba9368476daf145af2ea4da034,53dae2fcd8ec47e8b2ee836a33fa7f56,6217ed218eb849178ea44c50013ee46c,6773b56f0b1e4e809cae44f2292d8704,74dd4bae1614448eab7b506e876717e5,79fa5bf5294d45e1a0a0bb508c378ef6,81047af0ad074bebb66e5b3cbc5cc61d,9bf0f887ef6646c2b431256316eec169,ab1cf4535f884961ba361bc6f4281c65,b8ca086f18cd481c9675429eb9600518,c95e488bb4334c0d940b7ea282500be3,d72b5f6a32094af4a50aeeed0aab79fc,de69d1d5e5a74c089d2e5bb139b64e34,ecaab1fffce14413aa15c570fb476661,f4f1759977124c5bb9b89b5070d305b1,fc195742c6bb49ec9ad3c55a9252bafb,05a4717086a043a6afbb8bebb2facc2e,0ed6377bd0a645e692e5051ed077e55c,265f446b649a4e478f65867b206e88a1,43aaddd505ef41d9a3ece81e15ef811e,5fa0d4b64f9849c19bad65b3b1e80089,7bb27741d605455bbd7bbbb19a7277b7,901dbb1a6bd3459ebfb7bbc86a39bed4,9aa928faea6a4c79a11bb4f8d35e093c,ae422976b172495e931adca99afc417f,c36fc414fbaa47a98ca11086eb63155e,db1bf64c3ebc42e781bd97b2c73febc5,e7ce3bb6ad004dca91f8d9ca9dd46e33,f8e521c3b43c413b8eeee5d79bd42cf5,03b2974501a34d74b095f90571d38877,14a690b5d07c482dbcec0252431be8ca,1ebb2b4cc9824a638ef882a042ae08da,2a49aaa2a77c40468de3af3e43a6923b,3542b9613d5947b8b1e156c42535b561,4744c1b0dd3946cebceaf50427577e0c,52aae1ab319a400c9c3bad54b15e5b8f,60dc8da518454069b95ebd2fd4fae4c2,660b0d2cd09b4cfeb53adad27a4fe241,6f69615d46254e07ae9be716245bff97,79335330ce794ff4af6ef38b1689d309,80aa24faa78c4f39a5cc4eb7e72149fd,890a43a138f24633ab25e3078eb96e88,a77886d958fd49d597fd16439e117f33,b26afe04c6de469cb3f0ab0eeb46a2c0,c89bd8ec2ef84682a06581412d7a552a,d4629c9a1b604de9af4d0abf0e591ae6,db01544d49704634bec71d760e31b277,e52fe6b26be0478d8ce819d288f1dd4e,f4c3aea3a46c496db5431181b7f04a34,fbb721f6de624382b79bdf4ffd6958c4,02472d51150b49dbacd91c7fea1908d1,133cbf6b85e646a1ae2770bca8695281,1c41f97999604495a3b37eb809402c75,25c4cb25b7724c3dbfbefd92e3222189,34516d9daad54faead7d30c62eb87ef2,43c018e8fa30446ea0baf01a5d14e0a1,51ab4cfe695c464481d9b543e160b19e,603cf0772ec4478ca20f4c4de7ddf2d1,651fa3be3b36468daabb494d7b42f0f5,6d05cd6e4c26457e82fbf355498083cd,7898ff7ace964ca5925c8cb2f66c6068,7fce575ecf5140f19abb2cb18fb508de,862c841a3cde4641ba54ae5069ac35bc,a4f8aaba88834f33bb18d9b920c6c1a5,b19514bc868d47e8b61d6362b1f14911,bf8953d6fcbb48ac8e36cc092eeae961,cf467a46204143379a53720efb18733e,daf6459de5cf4632889915bda8196490,e00b93e4563d4b31a6bdc91be174a4d6,f2a154479a9543a49824120e7ccb510e,f8c628c0eb544a5796aa6be7a2b22f1b,0161731999fa46d187fce6cf2e627f45,068527c6603c4f5dbd7ea681c7a19f0e,1235aab95a1e4fb2b3a4efe583bea36f,1982dc86cd2142398fc71c5cca5676a7,23bbd5c34268466fb72334a33c5d0e18,2c0b4e5185f8452283fdd8b51b67a452,37089d5eacfb4eea8738b1da06115306,4c4062d3fdda4555bc4b3b428d417b39,5030de787e0d495c90c418133c40dac3,61eb3501a05643d3a48f6c11320cd529,6adbfe5f58364f5498c53d422b27e123,7194df006ab946c3b4af6a3f91ca656d,858c9b1112794ee3b6ac2a6bf9924bc6,95e9e2c62e794f758262c405c974cdd9,a01d30e60b844658aa6098e0ab99d491,a888ad8a56c6447c9457bef4ee51fa14,b394098a7cea4e7b8702589f60b151be,c2572db80c8e4be58cdcaf1c586c1abd,d30e7e30d7e944f0a6d9c4edb9444f50,ddb8f19b775942f28162583b074b2308,ed262885b9d14c2493702dedd8c12d23,fd1032ed468f448781a59ef8d1be7196,0cf4290fa9554387b8ba973bc3023d9b,1758a7ffc58d4db097dcbcde16787e41,2f97d0c2f88943f39a22ee08d9799f1e,3634bb6c96ed4731b7209194e6b36a9e,3f371ca106644e7f80efe76d4ad17edb,4c2e69bc6e254ebe8504844c4f0ac33d,59931576e0944366bab024496a9a2958,67d220aa329d439496b82e4811f5f297,723027e3ce7c4efe8059e31d8963b3fe,91b60b0a6b7845c883d34b62243cf63b,aa6a3b72956640df884137008c8607fc,b5a15969448e469591ffbe9b0c291738,bdf6b410e4974456aeb9d3f11b34194c,d86abac9d7c24de58b5bc93fc72e9a25,df1f7f01aaf54571a41f24fce2db0a5c,e57c57122d3142e7b991020ef6512c9d,f0f9e29a70e946178102db91327133b4,fcdbf55013d04f9b8a31355804382e8d,040dfd94687449e5a70504ee7db7e2e0,1313053ebd904fb99f3cfa0de674364a,1c9ccb6a17fc412a8fc45e0582d11fbe,33fb0cf4792d4fe2a0bfd27151cdc812,39c5f283c708490c8da282edb33a21bc,4589f2650c1542d5b95d5afd8abb2e78,56ee8c056d5f44bfa24f342743006c90,6289d4c4a694491783da9b96c4fdc8f9,68b99000b9004f9792e2c506ee5c2840,734be18615154732b39232f43271ffcc,9b6e825fbd834397a675ebb6119ee402,ac61d3d63421482098b0cfa1b8720153,b85007717ff54e8eadb6bca26aefa34b,c826597214464d558e64e15638e97145,d94860d7e93b417392d374ff29ebf7d7,e1bcaf170fff4c27b6587d71dc97d44c,e760b64b909a4740af5548f7175d76c5,f23eaecff1ca44afbd56febf3f948bd7,07365b61e75e441197c4dcd219d2bee5,161f8738f62a4bce9d97572511c5ce05,26ad73aa57a44b21b8ac35e974926d80,360d64d22158425db36296e598e66ae6,3b1ebd1aed434b6082ab66e0a851cdec,4617907b9374401cbdf01ddee6e86f5d,596d71d20b6e405597aec1a6b64b473a,6598e8da29ae4ef697534581cc2192d4,6bdfac9562144b25aaead2f0d1bb7a2b,7b52ca96a1ab4094ab8a623045d185e3,9c7a85b5650f409fac9353a516508465,b22767d8450545db9c4590ddd584426d,bd322a2d32b24a879f3807d1a6d0de81,d44f4b6b30b54c7eaab6386ff210c494,dd1a23d93789420aa646ebbef11e4615,e3d528ba77834e19b29db0bf0810d23c,ee53b2b188294a518eaf767d2930a9d5,f52e36a8344d4a49b34ef97c81cf881f,0478ad9a502d4ee69ed2db4abd2895f9,08595892435b48129e0a9af893e78bbf,0f2792571e19419db112853659e9b639,1521e9efe9f644ea966a6a24993a16b1,17a6e18e9bfc4636a234c2e7fa60330c,1c05b41a61244114a32093a73d45bf3c,25c2282022114297a138b040167a4dde,2e143a41962647c28bf682f6b021ef3e,3df007cdc9d74e849796aec8988350f6,45e5946a3b0246bcb9b45c3d11e5c2ce,49c74d26cd47421f84868e44a9f6cba8,562abcc0fca54a3dbd72b898c74ff37a,616cea087e4242b49e9ecf27e18c5e28,686de3ea60084533b89e8e6312904c6b,747674c2f43441e187ce1894b2aa17d9,80eca9fee96e42f5927f9fbc57aa4d1b,8954389ee0b642bc9f4daddecc667312,92085dc9fdde4eb0b4a7a836719169c1,9f957986ddcd42048beae7cb9a54dec7,a4c38d7b44a84ee1b6993c3df369d601,a88d83f9f085472ea32c794d7f0d2fa7,b2b668c5e8d4463aa3a448603c4d0b60,b9e08d581baf44f899b035cf930e01c5,c45bd0e04eeb4295b5217af2a56288e5,c9e155ddbccb4ef5888fcd2bb8d63c47,d9c374276cf94e8da345172a7752b7c4,dd60eaf7eef84e7cba89b8b5146ce237,e3300fab06174c3ba1dfef7da9f23acf,ea6a0d8f9d074044819d3d261ff9654c,f3afdaf5460b48b68a97f5c17b152759,fa507c8ea32349eea9f0157101f44fc5,1d36876dabd049dda9c61fde4709143e,205a97e8f3b6425ba4b0707d6113537d,6315725209514faf8a44d4e34e90234e,6740cdae0a8b4452b0091029c228bff3,91cd8298c937472c8571b2c946f120ef,b343726330414721af8bc91290618c36,b5201f6cc5cd4f80b645d27a69d9ac87,c7a1bbccedb34cf88a6891d8f6e8c380,057c441d0f0c4db0b7ed8eaf0ba2821d,12799ce607484cc98e83be7e22041e59,136ceffa78694ef7962c5ef43de96568,1c71d093b69a4ef2a761e3d15509e876,24442cddabdd4dfcab8c1d364ade7df1,292f411572c14ee2b6361fed231c03f6,3557311075fb4f6bbf7b3ce8ead4c61e,40d4acab127e48bf824f4793ca7a96cb,4a2032cfc33648a0a126f5eba63daca9,522e4eed232a4dd2bb12f8ed6c5d9db9,59af8c2a3636492db700a6a825641afa,59c3c910bc88f,5f44bae1e5c548f8806ea8b42503d67e,69c6c22486f44c2db74e4a9efe9b4e73,74335ab3991a476cadfac90c853e158c,80064ca967584ae98d6ada716db8317f,8c06290f38654b80852d4fdcc9de1a04,8fb317bb4b884d88af36d37fb16d09aa,92eb3708cd4b4277bf0f13361548125c,9a3c10891c564791af9c4a574f86a1d4,9f349548469843a4be895c45966ed4dd,a1fdadcbf5bc4603986a3f84c6cb2186,abd5993060bb41f0b79bb6c7b5e8c8db,b71793c609ba4199af766134aaee6114,bcf39f3f44b54d7287c391ac93abc4c7,c2e6e6aa78554db19cc4a12eee3bd20d,c86a0471410d4cfca06559f50bf2e7bf,d077cf3f27ad46b5ab9cbb459ed663c1,d31d33073f6643d29d4122e9582afd4b,d50819f758e8413c8b0f239873e221de,d86d50ebfb7e4878991a90922331a69b,e1bef5c2a5f04ef39921d422d758264d,e7a04219f3c749f1a6c77b931b54d619,efdc7f0b65be451aa28c319083885624,f722a79cf0bb4e6dade7a3fd0f6087dc,fa9d96a28ffb40b5b685b9ae972f4061,10facd25aca5436db2ace7994ccdb161,1f0caefded084b9c91b823e4db3e0a33,31c5d15743f24323aea01985a2ae7fd4,51d2858e9ed745b897ef69871d2152ca,5b03cf4f804846518414db821a35ea91,68c9948d45a6467dafc4299afeabc111,7b859ac7004d4777b6e08c0e9f2a7dc7,8bf0d95328e347ad8b953f9b19841cfe,a0eb1e00af3c47f986f477a7b8437f4c,ae7728128ca74452a91ef9d859180d49,c536d16dde66449d88620e5c82263dbb,e6ccd2070bec48b5925b47825dcad309,0345f0f3dbc943a2becc93513583f4ab,084c0ce62c1a4c08aad797b36550fc35,0e3ce14336154aaa841b37d3582e1e0d,1217e19e04784878baa2902b41cb0cb2,17451f3b31f0415d96e7d2d646aa8016,1be2b00afe3743f9a33649abc10ed463,2537b430368c4193b166e01a1ab4fdeb,2cfac081e01a4dbbadb6dc576f3eb13e,37b703c3ccb142c7b88b231e4bd34190,448bff90473443748ee3012968b3e091,485d762806874d9189d819c3414e95ea,55eda470812745cba3b55034379b5ea7,5ff54ce4db9848e083ecc3f0ce744829,670bed3cec974e38bfa6916fce3a7152,718a32401a1940b3a033af8082b4bacf,7ed27bdefdcf49e6aabab41ab74a126f,8787d231027847d193e312e78373ab90,8d13abc8662e434e9e75bea3735c0e52,9f338f6434d5423e90387c39cb920ad2,a2c3076ab7ce4dd3bc8c34e90c72172c,a85b60bcf9884a1d8e663be0a8f927e0,ad862fcb7c344388b981c27c1e846e26,b82b4631f01d4348b2d6e1c2a6c17243,c20f913752864a36a7070296f3753aa1,c7e9cd8b99af4e9b94a54b46adcb6abf,d96d5b00aeec48c4994804c86ed44bc8,dc956481e0db4bcc9618afe2b806d3ad,e237d7ab802740619d316cc8aaba7e40,e979a294022b423ba342f8ac41e38522,f1bbf49bbb7c4fa2a59d9a10e70b8f90,f9ece35e347b413c90886cb58cf16f92,0b0b758e168f466288de8e16626bd112,116415e1736d498489f0de943501e8b0,22c23ef449114885a20ce081e9b284cb,2fdc972b1c2d4e2db3d41d7bf565ab67,373c2bf12ca0449bbabb3b0afc10e465,3b9a82645fa2422ea3dca1350b4a9751,40a9f149c2604b76ae1da54423d29568,534cd2d6dc9a4891b25f6de6dd0357c0,5e7b95a9a9804ee39375751a42f6b1fc,69328d66ad9d4c42a622c6e82e735107,707d9f7bcc0640f0b8fe8b4b8e04eb4e,7eaf3a0a4c7341c0a5e617efb7dbc300,94c87c4f4d1d4d7f84d3b2032d64fb45,abac957fbf1941559b584c0383ebeebf,b9f5b7599e5a40e7aef39b74095b8588,c7a021fce09d47578be0b3e743b880f2,d31df49ab7c94cda9482f4741b773217,dd69f8360dad4a73ab0d85faaff797bc,e908325635804497a77cd7b2b02e6b3a,f3645a6db0a94bb4aecad66a28e0f3d0,fea0488c82d345ac8e8c53a6356bd14c,0a5eb282ccac4438bc518a5bfa9b1ec1,12bcfa93d41b4770b1c93eceeb83ddd4,16c060e0c23e460b8cf5f60807ff49c0,21a17eb9ae2346248cdbc03cda3d7888,28fc39f92e3b468a8be0b6be36deba45,2d1169d1578b4165b87e2d717762e6a0,3ddc7f2aa1614a0e92c80e7db3f8edd8,43a4ba21f2f94310a5b38061c4472f1f,4d8008086a554a1e8f0d41b00b062c1e,576d68b329604b819e28c97d5549d080,59c3c910652c0,5aede38229584c2bbf988a574d883d61,6543c04713dc4a7a82c23b42f98add19,6b91e52c408d42358aa0f6ebfa71356c,77176277aa8044ebb5464d03ca4fb285,87574c063a184b70b83a6fe69a733938,8dea54a9b5d74e8c873c937210b04109,91b9badc2b904801bcb50efd86caa22f,962d921b154e49179dfeacda636ab70c,9daf32bbc9c6452090e1ca53ce47a1d3,a0a5d75324ff4c3db4774c24f0f4c225,a7ceda8f2e3e4ad6932d079a9a206e5b,b30028c3730f4977bd748625fedc1121,ba3f5079a93242a69adc9fc90c85a679,c0df782da70844b296674b61fcf0cf6b,c44fc63436b14cb9a76c1380f3b74f28,c8fa47a83b104d3c99964bdec128d630,d1bb748781be4feaafcd3feb8659f73f,d38dcbb496944d129bd31d1b354b175b,d72a56a0282b4583969478152b05d1cb,dadcb7ca938e43fb9b02823aa629fa20,e26b63bfc16a407c94fc4e038624ca11,eaf5811e6b0c409e9bdcb061a8358021,f41c1b247bc2430f96e96019cd8c2211,f7eeee100e194ed3a853e3ce2741582b,fda621b56ebc4bf9a2fa60bf26d3dd77,1198488614224b14a6e5fbd1df05ae55,12e115e63855462aa1dae30d3bb322bc,1952b702175e45a2b0d431aa5a559aee,23fb5e12545e47e1b8ee44010453ff1f,292258f5ab314e00a156a9bb5b83a289,34f1a8e3521346d8bcd5c674638af2c8,3e60621c8d234f83a2c1479076848cdb,49925b5714f64aa8855512cff970d90d,504832278b234c5ebcb3b29abacbc1fa,5910729f9cdc40059db1aae483a54c85,59c3c910a0cdd,5d931a4bf88a43e2939dfbae512241e7,66cf32faf3534cd08996c18daf4ee9e2,716cf489a65b40179d15419536e60252,7e19d509aa0e49e9ac002946678b4476,8aab8175aaae4f7f864945066729cb3f,8ecd8facbd46406e9ac570828d2d916b,92ce312e7d764f14a77db225280805db,996460f56b1d4600b34004d45368ade1,9df60105af904a7d9e4eba423c518c23,a1b953391a6a448b8fb7558fdd5af56c,aa75b0cb7cc9471cb63703fbba3dc35c,b71186b5d81a4adc8ca67d6570e83a38,bce04c56cafa4c199381537313095f3c,c257649597de49a0be391546510ac32a,c85ec53a9f754c898e30403a9384f9ee,cacd87d220ee472e8b4bc058623a23d8,d207443c22ff451ebfd4815743c4965c,d4fc19ed4986400b955d31964d548368,d7c564e4c6e943cb826801cb3bc3165e,e11714aa1fd0448f98f7fb080f7cc345,e5c22f5bcf5047ac9d9589fca1e408a3,ef1b79c5dd304a1481bd58b5bcc0af81,f71ad67956d44a24826887e3a0d67945,f9b46cfe90424502a076852be9b882f6,ff5de646e03343b7a629939b8e19561e,028dbb2a09d443bab4409fd7cc475531,0adec489ee0b40c3971740644d45bced,15890ef9e2c9416e8abe74e881ef6c17,1f47ea490b284fc8ac6305d871c94170,237e7ba9746e45a7b1683e0d1dac9f41,2b25f4760ed148b983da3c7c1bf26452,348ebfe0c021471eaee3f66ba830d3cd,3690319254974a7682c326aba33d5a96,42cb19753f784968aaee6449a06e3c59,49e02ef2aed4467d88af72089c004506,54a3255e6f3342978490afc09fb961ad,59c3c9116cccb,5a0e20502c985,5cfb362a8abd420dbdb664e0ee79960b,648c20e3a73949e5a2017c6c7662b47b,66c9eccfb9de4340a9ad937bdc56f2fb,68636ed1b3c144868e9b35cf5553a716,7159b61b2a544fb4abb2afb4a982a7a7,7971ea8f40674b2c9105914708649149,7d524965eb2444daa4d7782574e3236e,82d4b81bc0ea4f48b7b3e3bd957c7259,8a00b0475d9044b19902277481fcf65a,8f0335bf282343edad9e06387089612d,945529600e554fa282b939002700e296,993b322cd13c474b87344cef9f969a61,ab4a800dfdc64ad5bf9585cec95a5d46,aebf02346375479bb5e6e4e0c695362a,b0ac976bc8e6410d87d4d737180fc1fb,b4f5c043ae8a4775a365b5a6172bcc9a,bfb957c695184c13a2ad88be91fc87d8,c4400f550d43425ba470a21331ebba1e,cd00c54734be4a19b1e8e51b989190cf,d2dee6ac1e6e44b191a1c12e1df84908,d8a477c05f95478aa19278af3620c098,dd8a21a5b66c47a4a3d0b6c7a6b283df,e20d5a22b6a44b80aa02278aa06e859f,e359fe17fdd34eb799ada9158cee86e4,ed6b3760f43445cea1dfea417b7bd748,f219f8f64ede4fe29bf0d315c303461d,fb848029b0d4400a987d27766c4a70f5,09095a24003141a5b6482105056550c3,11b491b55adb4f8aa29ac2062fc6c009,3676cdd3d5854980b120adfc2f2fa462,5020a4a2124c4f11ba879a789fc78be6,5b2609454b6e4dfba79bfb51c49549c3,6c615855014741a4b5a28d12fcdb1eb6,733d8d86a1784048a16674e800a73382,7f45cc00274c45bfa83e9adf5531ffff,8d316b5cc4d24f85a29bb07e3f93e3e9,91d82896826b45008fd07251e9e48c45,9e01c801edec4667a66762a706478941,a3a7a0ef382b4e9380a6811f269a03c8,b5d9ffde12db4e77a82f6232f7ee87dc,c8afecf936ee41578511a688a9e5e4b9,d0202a328cf5440db5f60f7f87ce7d14,f11a8f0704604fdabfd846268c273b46,042573c8b3ff4aa2af4676b48d7a89f2,10e34d6ec531488784371e1c011c71e6,21e5d3b3bd19481c9f8bf0644ee868bd,4c734f3544ae4779bbf458537fd0502b,5a6da538df4541e7886b4f2ee49e795a,69abee043f0a4858a037bd73e14e80f4,712552af4c4a4c51bf9a80e9e9d9415a,7ebd4489615c461a8118ab2c0d894b8a,8b3daa19add94042945c5825685d1547,8ff9dd8008234e538569edb3747e5a4a,9dabea14ba364e9e98b88b93a58e40d2,a2caff747e404b69bbb7e0f9dfeda51e,b27b05f58a8046df83637e82903bc1b1,c189a0594fde42daaf511ad2cc78e945,cd4a4d7de9c64662ae9d5100795be0bc,ed1ce0f826234effac7ca0716c15d664,fced9277638b4082877e382e84430514,024d4a07305341ce830040ef36edbb7e,0fec8dd3765a40689746a52a5125a71e,2062fdb5d10b42919eac5c6c4d8ff10a,4255ff7a678545298b294cf6ff058058,54d5e54175984b1a8af0aad48b8ec37b,68435fd14f0c4395b1bba196acd07c73,6f6b2c79def04330a220c39afd60fbf9,7c7fea71169446d4b76e694f4c03ec3d,8846788762b64aba97858f6ebb86d3e1,8f50a27a9d0b4a8fa869729c962335ac,9cb521f41e12425e999cbcc258205c0e,a257dd77d772452aa023207b5afd0aba,b04867b896b540169619224e337c7f3b,bd2ea15b861c45e0822d3a25932529ec,cad74883b8a94c3b8dc51e166cd95d29,daf2c21f69214e1a91c677f9b7cd0fec,fc7e43d1210644f6bcc72e42cfd8e53a,08747d4a9fce498cabab0e046e933ab6,12d7481758034085853913a03f3ecf42,28295aac3c464a73b3e67f8e8a98903b,49cb952c6eb74093a7047b0b69592315,6433bae2fad64ec9bd0ae829348962fb,7ceb35ee9fda4d0b825c687f8d5a7c2f,91597120e0fa4c73a211f67836669278,9c6514f7fc1143b5b2435ae26b366a10,b9289202e3194aacadcc97f5fb7dddc9,c44b8c8e865c4e87a5ba29ef173664f2,dc1b66cc595240419cc56437f9837d7a,efa1927efc0a41838bd7e40c5a3bba6f,06668069e683438d9705b4223666847a,092f319b889f4af5954b4ea4023aaa1d,17428a793d6c4b4280469a38c0443ddc,1f157b1e85724cff83ec82b383507b5e,294a6414fdf3425ca2d95544adbff07d,342d9bd5c58b4ad095fbfdfb72a2105e,4a77fdee26a149d79c1149776686b951,4f3c705386244344967cc48b49c8ef7d,5e1e65acd28c470c8c7458522316383a,641ab851a17c441690c912410a722b25,70b46eed64264c54aad7924eaf0ec97b,83d9e593781a4d979a3db28826e7dae5,92029ec1ea6142a19261ae628e284225,9dc961eb85eb49f49b24264aebaccbcd,a5d434d9b6a147ccb301f8e18dbd0e23,b0a59c018ddd4818b0398e296fdc041b,bb92410c56f94684882884aa56dae108,cb6c60bef6704194b2e869041a2f9729,dcd3523c5888444bbceee85d5774d277,ea4cf9bc5c0a417492fbca703aad2ff2,f9062c753ad940c28e49bfc8d4c17c5e,016a6fa179ba427ead819e30c6b00ab3,068b06ee1397403598c6b0303e54cee9,1282239797db4e6389b03eca64ea8782,1a39a9802fcc4d829880712a09c9d3eb,270bb7ee5404435294814f70d60ce75e,2dcd763c5c6d48e49ecf26dd2c5a49ea,42468ac3e9fe46efb98a840811a8eab2,4c91310eb5b6494aa52e435cca0911bc,5130f009521444ca928bdbc0e53dfcc5,622b49c8d0ea40a68dcef2defeebb50c,6cbcb5c9152e4b0ab34843af7e4c3b3d,75d4f4b7f9284edbb7fbe8f3a508eb25,8baa40bd0d0f40938ebbb16ba7b7988d,97e9d1050cb649699c57ab9133855092,a115d1d96ef44a318fe011129257d9a7,a9e4d5a57e6641a8818879b807259d11,b4cc2c454fe14ce59c08fb1e57b98c1b,c6d783bde74f44f9888c865655447321,d323bd19e75a4f7aa310626b7206841a,e259ecd55247457998eb1fa7179d8888,f5d141962e77476dac666e1ea4e96cbe,fe5e7f196ee543529fc49875cc2ef615,1357271bb7df483e870943a36b6dc46b,280fdc814ad147a1b2fc65f1a09ea2a7,35032e12fb364ef791cd7925a7de8cc9,523c03a3e20944549fd6b3da091619cb,63c61454a16b46468334915a2f904044,6b9b49e2eeaa452496cea16a33bfde1e,8860124e012944c79edf44f76ad2bc18,8ed3822ee446470583b3d302cf491486,a299d4c5d27642bb86560857348bdea0,b2d1bf59627b42f887ce7a7a83807d4d,d0bcf12b26184639b1278d4e74522fa5,e7a543efb6ea49cea5e6e931b3f61d1b,01b9d760618d456883a610b3c1de2bc6,0781c152ffe7470791eaf997c2073a8c,16bf37e6ae1e4bd89a054a2d942fb9ac,1eaadab78003458383ede18523213c1d,27f82ccd29c444d08991f1173c24e2c8,2f33bf46d1d246cb882a5ce589c8ce8d,4907a519b49141c8af9143c7a2c6734c,4cf1710c24fa4cf6b15f4789db6f3132,5db1219feffb4f07a143094a346f297f,63467be22d6549878915e368bedc0393,6d8f2264753d4a31b1ee43f00b7097e6,7932fa21e8464ad8a1751b387e5f292c,90a760b21a994aa8bdc3b1486a342ab7,9d79b7671b9a4e14b4fd7167f06d7da1,a32686aa7c514cc0b12a44cc709c95e9,ad9a01b0f68e40d98ee418a53450f9ea,b6baae15dce54445ac086fb24efcb942,c9378ed0cfd043ee8a092331e4eccc56,d457e61751d949d0a1d1ae9f9dd3c64b,e420a2383f064ff2859d82dcd5c08524,f77ea0cc9bae4f0bb3235e75e594e916,0b4596878a54449588ba75139b783790,19610831d54d461085c6748c1f405202,3c252e5d33004443a93a8b999f64f195,4f66caa4c38b4318af232d591f89adc2,77ec618cc0ad4ef2bc924a5fdb691fd5,89e2fcab5f8f4dedad46055945ac26f6,935552ea80c44e6baf0f135ca240032e,abb658b7851043719a5fb1c6dcc6207f,c1b00154fbe44d49a23f68c878eb8c2f,cd8a76b10bcf451eb55bdb45194a0243,e594ed6863ca4e15867071f3f925c3dc,f205514a21f448589bee1ba29c491d3d,02ea48655cc0481db0b38d3381dba279,0ecc59fed2334eddb0d599ba2c81739b,1da85b9d0e3a412b9ebc1ac58849cc4e,20603050a3b24dc4910865bbcc7bcaaf,2585259da9ca41c8ac0b2a0c0aec530f,33bd020f3bf24143a3dece52cdec9585,35a6e2da2ef0448db44b588ede93ed94,3e589d8fa35d45abac0cc1a6dd65aca7,46902e9c59b54a108246496b8dc54f29,535d3ded98614b719ba6184e0c9ff184,58b9497adc8d4e79af52af99c4e2c8e2,59c4f30da37cb,5b7db0c2f661431a9b5363e6864e69f2,638a4c4eb0f84ea281c9176b86ee0e38,659d26c4bace4d5a996b802e9b8b4382,679a2ee08564468b98084dc4199492ae,6c96bf3c4f9e4511868ce5525c5d7d8a,745469a4bb5a4ae69cf0ef7d7d24e321,7b31272b52d04be48ae394bdd94ff6f3,7e9f93b180ae472a9eede7b405e5ec9b,85310a5f202a43cc840576f6dc3432e5,8bbc294dedb64821957a08a291ed7e9d,929f2ffe38504f4cb45aa31759eed11d,9759e68a265e4b3d856868f61fb68d54,9d3f4dd6f87a4cf78ee078abb7c00c66,acd54e09661b4e329cb9ad66bb492d20,aff0199160b749f194ba51a5ac3ac3f6,b246aaf3538b4bba8a982aeab5fa2055,ba08d4e1a6ac4bcaaa56a26185c24b97,c0bb6b168db142f490b741ad507a6a50,c92d8fc0b57b4a699faf63a73ce8016f,d08c03852276485c814febe614248127,d6b75accd90848148317f51d76842dcc,daca9c6b09c74c479e87b304df849ef0,dfd740ef14ba4f15b7dbccbdc7bcc695,e211caedfc23485db6bb58eb79ef0398,e9860cfcac4b4ce79a47feb308d6cf95,ef49a6571feb4a98b7af7e7c5d71463c,f4e4bf3288fd45eb928adab40c617396,fcfa170542b44384bd4f8e3932315e79,01c2b032e4c74599b4356da6690356b4,05c7593d96314abda9c5e03c22f16a66,1495883ac7de4f27986b9047d4c77377,1db138a0ee6748508d28c717b9696f5c,2228b2da2b304fdd891e501894c911d4,273c4a1fef7149ef8a79db05a31b2673,346befad39544e8e86426fb31a71b2ad,365d6a58f5774f6183a3b725e6a549f6,405d282813ea4e21bc07046c24530a54,47ef43d7d70f42f793695ebbf4b20d86,5360789f34af41b5a05602f281c2ea9e,59c3c91156a30,5a0e20502c96e,5c4bfbb1118845af94859894126ddb6f,63ef0e37c4b743d89fe1b56a6b3687dd,65af0c2ff3984806a64cd6cd2aa8b96c,67fad6f64cb245f384d3cb276b6d725d,70cec256055546abad1214e495c36127,769bae950ac24b408d506b80ece6255c,7cf7adec4e2346f0b3570833e409b1ca,81820679ae144d9289e80f1ed5193385,891621901bcd4382b785ca3cfd004a1c,8e0c554378514a67bf3b82fc05299a72,931260006e7a411987fa7b87c9d2715f,992b998b8a554d6fae2f967869cbcc50,9fd6484f4ef444d88d99dd41dbda216c,ada402e56bb04ca4b24e9a6675fd1720,b04cd1191f9448f386bd28baab026f95,b4cce75eb42d4433ad3a3d05ad498bcf,bd224708fce2429da4c061d1b8370085,c1529fe4b4184831b85a428706bfab3d,ca9426a5fc3a42bbb2e27c053ea4427d,d1fff88f212944c7bd2070f235590135,d715c9b7de6c4a5891c2462770512399,dd078eeaaffc49fc80640f604b23b76e,dfdd9a03abe4484c8234fd814291fe65,e27f07c4234945c2a72657e664b250dd,ea37f794ad5d449db98868687bfe91c8,f0bda5fba59a4028b993c06c3bed876b,f50dbeacc85d4f87aa693a9471157d74,1678b19baaac4b2cb81a4e6f41a55ab1,5a95c503b4da4a0184abe4d6ba2fc8c9,6d2fb51beba74b8995ab4b56c0da03fb,9a42ca68f15041a58c9a50dcbba87206,14a8c44381954fddadefd07bcadbc251,2ce390106b54443f82731479aa0c704d,3dc8c3544d5a49dd96805643a797a383,5257b4b8f3b04ef3b5108efd1c50d0ee,666cc304c2df4aeea74b06984a567792,7264a6bf2df14e5581d4daa0e6dd2694,8b115c1da2f84b08a91fe4f9c9692844,9caf689665cc4e158cf3a22787d4c2e9,a5b4f2bc18df4937983e9c4a8beccb90,b780843bf4084ab292f9884a85021016,d6cd0bdcd9484ac48843d3e733c073c6,eb6f200be1fa430787be9c2d3a396178,02d78a60696543889be9e77f0ed2acf3,0e1af451e1274d33b540a8ef941c7f6c,1ca9b0d19ed745a7b5d9763af0952aea,202050bb0a4c4fef807060f173357d25,23e30e626bdf44e5a906ccb2defbea80,2e52a42d60004457b5d50cb0f02ff4f4,34a4a7fb641d45ad9f9ef91e4eea310a,3bec0fa311774f608e7338d35740ba81,452f060a0a444b46aeebf4c91a885796,52d8903a82294026997101263ede00c9,5758625a183b4cfb94c892eaaaaa83f1,59c4f30da3761,5a191bb1604245df96a69a3cab3f5648,6161d5a7fa7643518e321dac9db74eaa,64d39c32d56649e39b088b53bdd4767c,66dc38d4ba074ce58d197cf0176517fc,686c52f1b1024aa3a86beb5776d557a5,73049013e77c4aafb1f7dec072afcbf4,79dbdedd6ab7451fb9d3aa47f3b3d2a4,7e351b7ddfbb4ce89bf3a4fa5448b1b3,83a13410a98145ee8607caddb97b73a3,8a39389fdc6b4cb08a2c06511713b5f6,9111bb3a70ba4a0aa761194eb09b67f5,972dbe1b98f94d1992eca836a9d36fd4,9a25f7a0fa8e4b1cb384624129c71ae8,ab6c227f21ec4e13a8b32a27d573d4ea,afe170effd334c0383083bbded16f48b,b17ae46d320c46dc9da56de95ddcdcd7,b7fdece13c9944d3891fd411949df302,bfde6136b7bd4f3a9860ca29b825f0a1,c765c71664364e95a2e787c2e8d74596,cf888502b8f948f1b61839f5935f9d24,d35c4fb0a8214efb9d46dcb1f12c1e45,da17d7eab28c4668885b8229564cc209,dfa81f80dbc0427a8b6d80ad321d30b6,e2103d9c48194b86b9ccb4da35c707d6,e48aa9586af34db4aec32d000e0913a0,ef0ea861877448b6a2eb4058be4ded81,f48f35de2aba4d8c893d41248fd481bd,fc6add72699c4b0a86aeff869b21f808,08da9e9253dd4f809b8ba186086bd896,16bef8c61d6641aabde8c577d07117cb,255498db3b9249258b60955457a93dcf,269a82a6def34cd4b675b0fbb862446c,311cb557cb644f0d924f209c5ba6afd6,33e10570ff4447bbb43ecd7e6bb14bf0,36a50b42fce44aa8894abcd045fc53d4,4794178afc0f4db98fb9e775cb48b327,4d54dc286ffd4d56ae8c9b88561df662,551e66a813c2410597c89d1e0cbe9c02,5c695b1f286f43ccb0a6fe3c5c1785ad,6964af6ddedb4a1a9abd30bdac27e8cb,7157616c904945f69f43d19b4640cf39,745b8a233ec34d38a888251f32a1d49c,8775238cf6d0467aa55608af51b9e55f,97c9bf61af724ca792fbb1a2ee2bcf2d,acceb38570a54f43b99fbbc70d58ed5c,b7536a6c81dc4d26915d605e27f35454,c1d6d06b47824b7a974db5fdfed862eb,c8e13fb3524547c2840986e3601c09b5,dfbcece662244dba81f83bd34bc3626f,e4b436c854ff4c2bb39791b19c8166e0,e5c5e1a3b4094ff09d51a2020af09e4b,f1ade7adaf5141d4b4bfbb68de25d7c6,f9878dc3184d44fa83ab6ce7cd097bb8,20e1bcc5e5224622af024292a8165dcb,2c1f0b68e0d948e795baee0c58f45c90,357ea05ee2b940359f2e2d224e5fc23e,3f495a4df1274fa682d23fe6f8637840,48e923f353104640a1cce2cc39d0b151,5ba3c6e5f9034714bee7d706292ea97f,6cbeb5fcc79948fa98fb90a6a33f6905,825131d56e204fe983d774d1d27155ec,9e047a782d544a7dabc4cf78b231de4e,a899b6b589a34811a560c77450bb9cef,bc490b7f83424760aa0dda54cdec2bc3,c71fdc0a10464cc4a86e4815d888fd98,e2a1f51a793641f2a84f74a0bce03b64,f2b94c9d3a0c443eab9991bd15eb3e71,fce788c2855641e39caafd239fd67de0,0065a817fc4549f29fa40d6d697bc648,06f929b9e17c4ee1aaeb3b0d683a99bc,0d4b887be2c14abca70570a718335652,0efdc5a7bd2a4f0fb3c9287b9176c62b,19e778908db94bca80ded4128a4a3176,213ff5ac1a5948549f61d65640deb8d0,25363dcb59a3437c81f40560db9802cb,2c56a5035c7e4d5fb11fb73933e82587,30190c6c50264e31927228003a66c3a2,324c885fad4d4d43890e9abaff932b6b,37c17730254b420c901f641c9f3893cb,3ca281c451254915ae7c489de724ca99,3eefaeda75024d97bc8a009b0eca0b28,456cbc7d6517470eb96d719a86fa8aae,4a920fcb0b404c19a50075f49abdccde,5277d2d2d9794c81a280774230f46a45,56bed676f6da40d0bc3af43a90ca9361,5aafe6a72c194e398d2ddbaefdd8ac7a,5d5343277369488798035633bc4e6d63,5dac723b51df4a1ba3372d5a2f8c3614,66cc5bb5170244839978d310ad03340f,6834c79d26e94e9c910059b6f0c0ab43,6cdb720d782d4806aec019ec98a9a06d,71de48347809416c8c652bd39bd6f1e7,756326658de44b4884d287406b40c7e5,7c8e2159c58b48d6b7fc3cd31a4d0376,8089e83b09a1490aa43c8b1b07db4871,847a2ff6c1d246d68c2d5f23e8ce212d,8a9b774fa61a4f8dbe8015aad2b65d8b,8fe4d0fa3dd1471a956fcac5104696a9,9382d4c96d2c471f904db962b6a86a18,995cd02016124f21b25530f31e8ac9f1,9eebe985708a4eb5879ddc07068070d2,a1969bccade74ce6b28e73523ca457e8,a8b70fd729764043838ce8806aa73e82,ab552a8d78dd41f985d620f2b49418b4,ae67a940eae24adfadb7f6f21be9121b,b42842be3a604cfaaa4573231d9b3335,b835729eaf9e45ffa29c7e18eea44634,c3bb3893f8784dfab54b386e6ac6d6f1,c698e02731f94e91890c296971db167f,cf3a7d1a286b4204a91e69526841eed8,d14f4bf18206458db90295f3518fc4ab,d8382df9971441828d0c30a9cc48767a,de23dcd6400b47c9bc7796e69e2bfaee,e292c3e6312c44d1bf0041aa9c72d9be,e50e3ff6c5f74604816e954c5ded526b,e86f4bbecd9b4f39b607b72c0d82525b,ec146fce25694603bddb86a133c43765,f0ee2a43733e4cc993d0fc7536e6a4f5,f3e909ec27534ccab5037e8100ee12f4,fbfcd49d7e1d4b3992f72605076b1200,01a62f9855084ef181c7fb9fd2ea45cf,030309a5174b4f7caaad159807ffe9df,0908f05af4684ce89e4a6ce23903fb99,0d29b5d152d84b56972477a5eb04abc0,0f787f56a09645f3b3a9b2a9c439962f,111a678841f14e37bc1d28f341891c4b,14eca9ac67d340d9a4cd37d1f8decddb,1aecfa61d5ea4114945ca4f8854f8502,1f43a83183e444dd8361a6cbaa8999bb,209c917bce7c47909c73d6270031dc3b,25607e5b64114ad4beccafe6be3a67a1,2fface024e1b47978a0b815d80013840,3477306d587940fa8e78781f484bf743,369bdf501bb04203b36ff544c60684d8,42046231a8764ba6a64960fb9bdd8170,448ba47a59434e71880bb5aed3c6308d,478e28e9ab7d43b0ab0c84096f6972b1,4867f9529bf640c5903a64a2851428eb,4b569a55ac8645bca8b5a99085873d14,4e9ef71e84b849f19052085451ecd79f,570e9289faa74d4fbf4311f8afc30362,59098a634e5b40f682b784a34197dcd5,5a4ff7647b8c4a38918575db07b0c3c2,60f0937155334e4291ec81465d725410,669ad8f3ca344c6aa68ec37157f69750,681c19a5e33c4be28fad80db6f654015,6ba8f52d1b4342958f21b7c918e5a96b,704daaae90664258b61bbabe2b7ef1e9,7784ded5450f4f1e9350ed797e56a0f9,7ad7497dd9de40368a5ddbcd61f85e58,8148bafc75c5428fb0ddf4781116e36d,84e7b6031a6647e6816ac0543479aeab,89961862ba9c430aac4bbcfd5f0e4932,8fbcf5b51bff4c07b0774fc4ee9b889e,942ea84d3d9f42c39f665913a72dc914,96fe78dad655489d887f33615e3000d6,980fff2c970345fd8ac93efe9b90049c,9885e18aa40d4e448e37e7a456f2bcc5,999f1ef1dc9b43a2ab2773d7c6fc3e29,a31d91d9c0e44b899aba6b050c37db24,a691ccb3faaa4fbe829679b19eba304a,a6c5e856583f488ea2d047486900d508,a9d35e7877e74d2788ea75741b19d2b3,b18fab542e1b4a61a68d9938a54ab9d8,b42d6fae8aed4db0b8ef99845a746def,b941818228a841c687aac410281bf22b,bab38340bdaf40e6815636a0ec8f6d30,bbe39ccfc5b34bba8cbfd1557f2ef101,c0f842c5157b414f86a1c11b23c3af6d,c512785f62a84c0e9764d6e018abb50d,c6adaaddc4174cdba58477d0c220ec0a,cb3840e3fbdd4b8498439cf31e2b2e24,d132a54c1c9040189210a033c82c927a,d3acd9c14b16429fb226a8f2688d650b,d861bf34db664fe2b6f1f522632ec624,dcb951ab169446208e133d2757a76e52,e088ac7032264728a7c89fa7dfdf36fd,e1506039fa1d46cc8ff2718ea9d8530a,e62a7c70500240b8b6ba926662692a50,f2fa445a31e24616a39b570c8570adb4,f7869f7b185a48bbb9af3ad26c6905b7,f888a4c3a3d1448cb32fb20044c73f1a,fe681ee8e83d47cba451ee3893e76773,ff377d227d004a218d7abc9bbd2d9859,02505b3339024937959bfa4ea73c5f49,076b3678949642fc87bd8aac12b044ba,0e696938b6054ca0b2d64c1dd79c7066,1292a5a6b6584b239391d80fc7968b66,1e2796f90bb245ec8a11c36aaec947ed,22f65c42b8b3495586e103d9d1c48abd,253bb0fecbff4895ad4abadc6c1c85d3,2d2bebb2a0254e79bbfff9a01490dfd4,31ac6c068ca44a208b6481b0d6dc3a78,34d1d23137d247b7aee47cf58d47da4a,39b01c4756b4445d8f4c6de5e765683e,3d1e3aa9a3f44b86af946c07eb36f2b9,411e1a08fedb4d0cb590638b0f8dc5e1,4676fe1676194c449b89238640d135dc,4c565efa462947219164c5389ce658a4,53fb6ade0382485bbc7b9fd6b8c5f1e5,5719ebc120d848a6a594c99fdafb6611,5ba62437a670489db3071db534584837,5d64cd0341314bd798f3bdb786427d04,628899e01c68450c8d341a2eeee55ba0,66e8f373e4164468b027f9e179ce5422,68689db3102b457ea020bca5529cbfaf,6e1edee080804afab632ba218934e0d0,73f3eecc922041d5a6434956dbf417ef,76f2fd91f36549bbaa77d8be3d9a6b61,7ccf4cb473b643ba8173eb93e0fe9e78,80b5773787294f5f852dabe230e2d038,86b014e67f4d473fb89b9fa4ee1f9357,8c424599f9854d55bbea77393a942252,903276480587408b81ec8c1ed79e656b,9651692ec2e7401aa9cf628a509a63b0,9bde953fdc1e49c3afae8b46ff74a60f,9f2705413e914594a500752fcc079586,a3006cf703fc4150aeecf192047b4ca5,a90005d425ba44f299e10a5a0ec769c5,accb97938a1c458dbc5805e32b58f316,b0651c4cd70d4d9c8d7cc917b4518c81,b4496409eb244f9981d7c6e4e430a799,b8d42d8b5abc4bf4a793c766e77ebb39,c477e3b126394cd6bf66dfbbd4a364e4,c951a7b91a0549b6a150d11be94a4cb3,d0bec809a7324434b11d48a5944a02f2,d1c495f6e42447caba8352375f9c720a,d8de59ef9cc4496fb304ed6fc4eacc7f,dfdc48522b034153aa0e35299cddcc4d,e4277e59f0b14d9b8febb168d99c6e0f,e545619f845742a39784df6b0b42a60e,e894bce391e54ed2ace207ad2ac68787,ee787b8e1f4042ae80800df1fc533a6d,f11f5e44a65149188baa0b8705b8dd42,f461a07f002e4eba8670e6881c69421f,fddc1b506aea42d1992f73b14005ade6,0282c5a0af0649a59b45f7eff65a1305,057358af39574859a30e9f5baa737043,09911a3010ae4151addf6f7f65524ed6,0da138339a584b25aa654bdc4a233033,0f8e60b4f8db484592c3372315705f0b,14cd1878c86347c380ade48590188a19,1aa39a7cb34343e4a5e2f4738216aea3,1d2ba7d0d1714dd9afcbea951a083db4,1fbf86a4b69047eab28b2ef667d4152a,20c08883cda94712a3ddae0150274c97,28ef1744416f4e7dbd8df2458bea97bb,30ddd49688a44b61aa310e38e8751dc6,3659649b88a440858cc04ba0770938ac,3acb5a7b813e4d0b8b0e864c5e31a09f,4322ff753fcc4a51b7ac99f5a8af325f,44c9eaf6e4fb4390aaddc0a866540b6a,47f60299ac45463ba2a94c0d136781b5,4b32343d9c7840429ad3e9d7ea235ac4,4e8bd546b5ba45b6bf51627af81b48d0,511240372a404230bd2b5de16632cfa1,575718dab00e41b7a31d0fc877667e2e,5a22104ca7034b6ca771e6b4f4632662,5a89a5015eed437eacad295131f67d8f,63e297dfae374e8ab58e47ea78ed69f1,680136df27934eadb828edc6674681b3,6af9684deb0d43c6b8bf5495eddafb78,6dbe1acc88af40e789d7964b9e3b1f58,7432faf330c944bfbef852f4bbf1c7c8,797ed29c23b74f0f9b54fab14a8c83d5,7bae74363afd441cb3b4b833ca59f2e1,819e33237d514587b0dd654eca6c1aa1,867d6b59a0e84973ae4a002ce5ddfabe,8b908e1d760f410899385b7aabb8111c,91bc15abc0aa4f18bbe22cf147d8a76c,96d15bd4a1bc4e18bcbe31d27c6179f2,97b7a77ea7784cdbba9ec1ed652e5d50,985ba37d2afb40ee96b4aa95895183a5,98c5101dbfef443d9e6c792528a3f54d,9dc109430b07464caf4f8f0033e375e2,a618102994bf453b82ba084f25ef64b1,a69720edb9344de1a171b2fbb7ccb010,a7e61842b86f43bd85c71ed275e45c98,a9d530c6f4e349218bdca5eed2f38460,b1def6a23e50470886558ae8b5687b12,b8fdbd38d5114759b815ceb8ff9f534e,b9d7b9cae223463da2e0dfed6dec177d,bbc86e4ad40c461f8e9f5cee9acea069,c05e05e194d14737a59b7958273b6550,c2ff48df103349dbb19a9324f9682a97,c5b0a339dacb4891b8f00dbb78e79006,c95315cdd44f427784ae791a3943d704,ceb7beb81e044d018abe6b0836116866,d2f9429a0c9843bba9022a20a563f845,d556922e33b84d92adb3e30d91424061,dca6e88bfd8d4ba297e996aec465a093,dcffe26f4eef41829cca7aba003cce87,e11be22022934d5fa09c7bddec6cc73e,e62400abda1f4d8cb2512045c177e0d7,f19426716b8843a6a4cea8156e2547d6,f719eca7d1cc42de8d0d5abdc595fd9d,f7bf2d3639854e25a7baa142b65dda97,fbc3b384f23544998609981d002fe2c7,fec3ef1b51104c659f91fbc299537277,ff6753575de2444db17d1bb24358ad17,04301050b9384d8896debcdd51e0bb42,0995e0f607834c13b041de0b6818d1bb,0e6c152cf9e8478db3698d5e640fca7f,14c3bf9afe944e979e2c8377290bd29d,1f6a083a7fcf4bbfa9c6fa8aa37f1c0c,23e274a6a169401db638da519eb36118,26957ad419a24eed8c03da4215b2db54,2f8976e8456447da9a8d25c3f27f0cbb,31bc60b7137d4a0791b9a740e9c334ab,34efc3859a5047028d7cc749059922bc,3a750a8edde8435ea4c1185beb51ba56,3dde7c39e1634f8cb7d2dd2f9dec628c,4165b42df16742f1a144cd43a5ffbf64,4753eedf9e3f43e7a350bc07fa9c8c17,4dbe7e4c2c57458fa687c99a6731d21d,55a2770fa40a4658bbbc293baa4e6561,574592af4df2405687f020a50d5310b0,5bfcd5963b2e4d36b5447aa783f5ce66,5d80474f2e6449559481407cb0484143,63f72e2e0c1d4a4e8a97ed61bb10548b,6719d6e1164b482a80066ed07bb2598c,6a924f37715546ef8961179c89127e1a,70e0161c795d486bbfc453f9c4c97490,74aa85736b6545ee9935ab4d8e0205d4,78ee59d11c594842ac269dec441cf2d4,7cf9dbd3487f4d40a4b23f5d5ec06b5c,81bf55f51710450fa9f2d6796c544f1a,881f9c032ed1494a8e6625948e97a148,8ebe91e4d9f147a69a544cdc0ebe03f1,9058ee7a29544ef88d4eeb09aeb68066,986782a837ee4d489a9e77b935a8de0c,9d00af275f834f7cb17b1a610650967f,a00eeb46129e4ca4a3f3f80dde4534f0,a35ed8d8475a4ccba624cce2177cbbc3,a96cb40fe1454ef79771a4dd3bf97deb,ad0a205f24204e0d9b2427bb8539b162,b2f829ae774b437cb138ed8fff0381b7,b456cae9a7b847e0a0f57d68add6daab,ba60c0e666794f00a20fd60369570de4,c5167ffe96f042f9b480fc32fdc2993f,cb1131d5ce934c6187f3260a7486fd30,d0e7bd7020f14c6fb32f462806d6bea0,d55d7dc9ddd94a7a826d6016877917e4,db9fd45ca965441ea699d25d0f55933d,e0b5b039a9864065adc147030d8555fc,e42e15084fa841e8bf28790987eaa615,e7e6721054e14e05b4e509d760cf276e,e92a6656c948423395a356faa2db3301,ef37ec2818d1448ba0a4bce2d4772841,f2ecf16bdeff474588e897aade4a7914,f545041047784610a461a57fe7c2be2b,07ab6283ed6e4d6e85717f9556ca8de0,19b1f56681c74b529ec4900232e3711e,314e29023f234cdca8e89cb723c94a45,4a5d77a0066242d5881f88ba8b822bc4,53e12a25ed46446798b072ee3a1fd6c5,684d713ffd6f4d5993680221e96f6f86,7a7e389a47bd4d2cb0b49381080b2e69,8ba3ef4547d3468cb8cbe94a48f971a5,9dc0b1d32d114233bb932d4cb6797305,a8812fd2d097495a9ae30e2100411928,b9b4e7cfe38a4980bf5838a0c7023e5f,d79c64844c46418f815933d588534390,fb9cd731b7df4704adfb7280fc6a742f,06c98ffe49cb4d58baf8420de69ef836,0ce89c8e1e4a407c9feea1c0331ce827,0e71e7b37ce947e68a6a7fad767fbff4,195481eba89048358639a0ae364e1577,20e53092cd1f4dab8412c59c4683ee9b,24b8fb021cbc44b7a09ba41598f2e37a,298b8e520f754503928532da5fc24d13,2ff7a56139c54d1daa3432fa2cd0c499,31f1993c44934b19ae1f11a2f70fab1e,35c0af9ef6c34f848d783cbd1aebbc8d,3b1138967cdf472b863c038df4777191,3de8f18ab6194942adecae0e8ef10d99,4390842ad968494bbb7a376359e89226,49c704d56b92452da0482e1c486e5645,4fbf22fffcf449bb93e92b6afdb0a8df,55d4e9d9f0954d6fabca5b31cf1874a3,59f5861bc61a4f3493031354775a513f,5d3ed3de9e9343adb5c7864ccbd28854,5d972932c43346508f345288b240995c,6612fb2d1a084e18ac4a7c6ce8cb2b94,6786e91305824bdb87e868ea83314463,6c419816b4fe4d5ab84ecd2dca6b7ed6,718761e12f8f49d4b98f48ff8c48c1cb,7501c3622ab04993b8c68fbe5f3f410e,7952bd391d204bcc939ea05dd2f08bea,7cffeb09c38745b8b9f504d4b02f9cbe,83c1797882864c9e98a9dce7bba2ded2,887da8593bc94f71bbb045063a7a1499,8fd9887d45f24ae3b1c3da228b9824b5,91646ac5a51547e794ce989f25376daa,993d3abf6efb4c9ea147191a36ccd7c7,9d8286dd7654407bb9cacd00c4abca0a,a058b41a72c745a482f6e18eb065b1fb,a42b66c139a74d38ad40008c75dabf55,aaaabb51edd044a1b3eb420a58d43a65,adcfe376a469461e8013527ceb997621,b3847df582fd40cb80d50160e31c7fb3,b4f505e677b24fe788dd4629418d5ccb,bbfec0cda9f54ec8a7a7e59d842beead,c518a6f0a5d349d1811fb158412c9e55,cd5908760e4b4d81bd58e5ce88d32609,d131f88e2cb24ea59002c87fd961e105,d6535a5eba064c098def97ae440f7db2,dbe49883262a45a3877952d45e476a44,e26e5d93f28d471fa4e903778f331c43,e4e669da8e6f4926be7b478021fd00bd,e86e0025f7904107bb14dd40e5391dcb,ead952c7f16449a08533cba2b6ac5a82,ef3cdb7cbb584d31ac538b6be2275624,f312991d4ba1481c9b9621fa777b8100,f7d67ed30a7848638920de695de98df8,0307619fd3a0495184794a6f4b9e9084,083082923549412fad9869c9a3abd14c,0caa6ce2dd2e4a83a40c125a39d02a11,11371c0b627c443a898fee95e16c3f25,17229cdcc6cc42abb8d0729f1a7af0c4,1b2d680197534570a26e0ec5c433184c,21dad9609257480fa4186049372b026d,2cce9bf43f1941bb9b2893fe4d551abe,35013649c74742f09ffb27a9784b6749,43d1c75c273e4a509087ce528abbb5c4,484d0d76ede24c3eb4238be2b74b9006,53b18f511c224470aefd37bdd819a25f,5fc3ae8def5c4f799c7930617205af51,66a9880d7175495db81e84cf1da85f50,7100f0407e4c44898f31f5a019e43177,7ae3a4f0a1d0478cade844fbb358f6be,872d5a55fa9e4c909a7da50958344c90,8cfee37d8b5946a9ac5a6f9c6c645ffb,9e0cf61444fd4eabbd0ff2bdb64b431c,a1010442fd804846a37ef696099ed862,a7a824ee334144d3999d1da00ae1eeac,accd942d1fec4f04b2427c87b02686ac,b4b41f006cec424ca6a5b5a53cd68ad6,c0f36535603c4e13908af0f1cf7e2c34,c6ce17aaa16342fe839bddcb26a60d60,d344a1d00c5b41efb8a85a2ea8547a87,dc0befe4e12f47cba7cc9aff1ce6de4e,e1934973caa2419eb9c3e71fe597cb34,e60a868da0194a11af5be38dcd3ae02e,f15bf288323e4d768ec1b60c5b861abc,f96520767980478eb0f7631fd9687c82,09d7a9fdea3441469fcc9f8b2287505a,129590cb587a4ca3a6bb85f22a9134ff,14f804463136418eaf3e0baded230d9c,208d4cfb6db74864afdbfaebe6610f5f,27427e20ecc54f2ba09b9af98769ff00,2c73d1fecaef4ed19a70f5b6de892af0,396df542f0cb496184f1382f8d6ba8ec,439604cc5526438cae052f1f3c2eef88,4d6582d7266d4dd79dd15093cb154fec,5365674d02c14b40a3e7bd696a90bafe,59c3c9104f9d4,59c4f30da37bb,641304fef9e34753932ce3749cb6624c,6ae53940aa8d42fba5bef517bf997005,759d7b55bba04363aa6129ab8bb247c1,8231367400754acabfe242659f8301ad,8dcf76850adb4f4ab072fdeab79ff516,902e6f47682a42a192b8fedeffb5bfdb,9314cef04bad477aa43b431daf6860f4,9dab7d9e7f7b4f3883195dea3d59fe6a,9f3e27080bfc49d5a47ab00bd39a3b64,a3f9192d75614525a0a6ee8833f02587,ad17067c2bb6466e8e8a98f6b5026e37,b7b5a9f2b03143688f04affe4d125957,bf84867b9e7a45998f8077b8b87029c8,c315ccf6bba44e0e9dd3b1fe2d5cc199,c89496753a5540fc83b5d2966e5ebce3,d173a0958ef84326b60a4e9f2a0877c6,d36bb53297514fb2bcc2ca39225ff821,d5cef652823a42c89bb3b8e0141f461a,d8a3e38b2978487594e26b5f4f35311f,e1c94897b173400680991b0352c4bfae,ea0b0d2d09074d6487f504e533350f78,f2a346558fad47c7a0ebb7c2bf49cedd,f7ae14c2ec2c431c83fcd6d3ae3cc432,fc8347bd82a9475bb81bec14325e4040,10a502a7da46472ebf58775928f2ff15,12d3c1c36efa43d2a3d8bc6d86b6ac9c,16c282e3ee94427492787200f085ffdd,23273fa39e45481fbdea66cd2b2796d4,28ffd1ad1b9e451eb3137e617ef388b2,319c70a49171407aa6f04dbcd9d961be,3de88977eb1a42f496a2673cdd3320d0,47a96e82a1224cbc9b7ac33ee08fdbb0,4f277f0f27bb4613beac9c1ac6b453ae,590cc50fe6e84e83b921aed21b4dc71a,59c3c9107f670,5d1312c651444b698f9b284dc20d062d,6583e636415c4f9a8bb99ec24b4e9c88,6ee5ca793ac44d138fc04a27efe7e891,7d67dea6125f44b48bef07f5274b06b7,8a956e877ac74278abff28dd0aae5573,8e7a4f0bd67f4f4c8024e752234c945c,920b1d1aa17349d9927ef27e3bbbea12,97f63f8fe6024197a28030e0e1277dd3,9ddde31442384710bf86ca599192ebc5,a11ff79bd13b450fbbe5bb227dc8568c,aa2e61e2c68744db971d0eda6e1876a7,b652642f79354e3183c63320a0cc750c,bbf6214857e54aea9110f42a018374f3,c20589d98aaa4275b40616f9b2b41b59,c48971423fd14f47a8da22f46a3b7747,c99af67913784caa97170a6dba35395c,d1d34f94cb4c4e4791b34ca4b132be35,d49e67a80a7e44769d5a4dfadc0b810f,d78d325ccf344fb695600d265c45fda3,ddd2fcfb5f6d4beb96bd5301d23cdd93,e2e8bd5c76764f1f8c1bc5c4235d5367,ebad644d189d48808ea752b602977f09,f6b5a668ab9b486393ebc97da4aec84b,f8d6176ff02f46859a43d5314ad5bbd6,fde22be03ba14142aa26c58f09251078,0c51b38211734e71932f910fec8cffd9,1c32598ceb9343428906a449077bddc0,3dca15851768494e91e5bf48be9fdaa8,51ec223bb1d74336963a3a9b57611093,61bc8e0a376b48718599f6d898933a3c,6e8cbbb2275a48498e8047975e5bf832,76d9db44318444c796f58dbbafeadef7,7fa3f686b8894528a038eac1cc70130d,8f3c2f06ff5d49039cc08cec44c945bf,938d455e25d5429f8eb886924a50c3e2,a09792642be5466cb012311f10fc6fec,a887b752e9034821938057db4358d013,bc060ec1445c4858a97f035de379f1ac,c90071bd065a44db915430aaf7b204d1,d94b97a0500343d18251f66e55b5216f,f2869aec24634e6dac5c5fd6fce74894,029879ca835f4cc2a9797dbdf6b13a1f,07bffb33f0d945e7b20a3115a1bc5795,0a140575161e4f96af55b7507fb745de,10b05c9db91445beb211ed47ff1e22b7,1684eb6deb40409eb0ee0e7c3547561a,1ae2505c482846e6979dcaac4c5ea83b,21bf00797328461fa659313d2530398c,29cb4b70ca4641fb85b09a6da30eb191,345ec1174a62424d96d6e14104176466,4130f965b66f4c52a951b74ece1de34f,4756c6b9265140319030d0a322c92a67,53603ae98ce64a959812e1d929ac39bf,5b226e8b50a64acda3f4db42591b9f1a,65f52e4de1094b14bd784f8b1b9ff21b,6f2f2beb7ebd44c1a293817c2bba1b70,799a5a1a04954e0bb34cb37c63bfd15b,86ef54a5212642bf912da5e9c984cfc5,8c03876885e3489da8e7079b1f25b598,9b4a1b0327e14b898264b2411b9e1424,9ffd03c8620d40379d1b725b7d7fa94b,a6e5c7c2b0454ac6a664e13830cf92e8,ac24f0b403604087b8edfc81e2a17d98,b45d8e128ee04cd49a6fa315ae570c19,bc448700deb1411d93747fc1c74c78d9,c5dc409da55e47d3a6b05626998c79f0,cc0ab3f4058f497fa71f52c9e2174c21,db334d9d185c4d2d832fd23bf3c37407,e0e4b662ed984102813196fdf7abc573,e5c05a03fbbb4f618a51427890e51a62,ed394689c8ff40bb94a72ff35decefbf,f6500d6f955f4f5ab631fc646e27a223,fd5c2bc127504318ba7deb244a2cbdbe",
        "hostCount": 1598,
        "okCount": 1598,
        "failCount": 0,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "show run",
        "duration": 146,
        "executeDate": "2023-03-22",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "forward_online_script",
        "scriptName": null,
        "scriptCode": "    # version: Python3\n###################################################################################################\n# _task.args字典说明\n#     command: 发送到远端网络设备的命令。\n#\n# result字典说明:\n#     failed: 布尔值, 命令是否执行成功。\n#     stdout: 命令的标准输出。\n#     msg: 命令的错误输出。\n###################################################################################################\n# please edit your code here:\nimport re\nimport json\n\n# 暂时适配了05A 07A 09A资源池\n\n\ndef main(self, task_vars):\n    # raise Exception(task_vars['ansible_network_os'])\n    host_model = task_vars['ansible_host_model']\n    \n    result = dict()\n    if host_model in ['ce12800', 'ce68', 'ne40e', 'ce16800']:  # Huawei RS\n        result = HW_RS_change_passwd(self, task_vars)\n    elif host_model in ['ZXR10 5960-72DL-H','ZXR10 9908','ZXR10 M6000-8S Plus','ZXR10 M6000-18S','zte_9900', 'zte_59', '5952D','m6000','M6000-8S Plus','5900','5960-56QU-HC','ZTE-5960','ZTE-M6000-8S plus','ZTE-9916','ZXR10 5960-72DL-HM','ZXR10 5960-56QU-HC']:  # ZTE RS\n        result = ZTE_RS_change_passwd(self, task_vars)\n    elif host_model in ['e8000e', 'Eudemon9000E-X8-AC', 'Eudemon9000E-X4-AC']:  # huawei FW\n        result = HW_FW_change_passwd(self, task_vars)\n    elif host_model in ['M9008-S', 'h3c_m9008', 'CR16018-F', 'S5560X-54C-EI', 'H3C-S5560X-54C-EI']:  # H3C FW\n        result = H3C_FW_change_passwd(self, task_vars)\n    elif host_model in ['s4320', 'S4230-54TXF', 'MAIPU-S4230-54TXF']:  # MP\n        result = MP_change_passwd(self, task_vars)\n    else:\n        result = not_support_dev_model(host_model)\n    return result\n\n\ndef not_support_dev_model(host_model):\n    return  {\n        'failed': False,\n        'stdout': \"该巡检项暂不支持{}设备\".format(host_model)\n    }\n\n\n# 'ce12800', 'ce68', 'ne40e', 'ce16800'\ndef HW_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    display version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['be written to the device.']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n#'e8000e'\ndef HW_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    display version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Are you sure to continue','Do you want to synchronously save the peer device ']\n            self._task.args['answer'] = ['y','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n# 'zte_9900', 'zte_59', '5952D'\ndef ZTE_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\nshow running-config\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n# 'M9008-S'\ndef H3C_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    display version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\ndef MP_change_passwd(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"enable\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['password']\n            self._task.args['answer'] = ['Nfv@1#2%']\n        elif \"write\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Are you sure to overwrite .*']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result",
        "scriptBase64Code": ""
      },
      {
        "id": "1fb2c55855274beda293a5dcd03d1eab",
        "createBy": "10127",
        "createDate": "2023-03-22 17:46:58",
        "updateBy": "10127",
        "updateDate": "2023-03-22 17:46:59",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "脚本调试",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "23180c082890409cb5af452754c294bf",
        "hostCount": 1,
        "okCount": 0,
        "failCount": 1,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "脚本调试",
        "duration": 1,
        "executeDate": "2023-03-22",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "action_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n#调试打印变量：\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n#    var = \"test\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n#\t raise Exception(var)\n#result字典说明：\n#\t result[\"rc\"]: 0或1，0表示指令执行成功，1表示指令执行失败\n#\t result[\"failed\"]: 脚本执行状态(对应用status)，True或False,设置该值可以定义脚本成功或失败\n# \t result[\"stdout\"]: 指令执行成功时的输出数据(对应用originalMsg)\n#    result[\"stderr\"]：指令执行出错时的描述信息\n#    result[\"msg\"]：用户自定义的错误描述信息(脚本失败时对应detail)，如巡检CPU指标异常\n###################################################################################################\n# please edit your code here:\ndef main(self, task_vars):\n    raise Exception(task_vars)\n    self._task.args['_raw_params'] = 'ifconfig'\n    result = self.execute_cmd(task_vars)\n    return result",
        "scriptBase64Code": "IyB2ZXJzaW9uOiBQeXRob24zCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwoj6LCD6K+V5omT5Y2w5Y+Y6YeP77yaCQkJCQkJCQkJCQkJCQkJCQkJCQojICAgIHZhciA9ICJ0ZXN0IgkJCQkJCQkJCQkJCQkJCQkJCQkKIwkgcmFpc2UgRXhjZXB0aW9uKHZhcikKI3Jlc3VsdOWtl+WFuOivtOaYju+8mgojCSByZXN1bHRbInJjIl06IDDmiJYx77yMMOihqOekuuaMh+S7pOaJp+ihjOaIkOWKn++8jDHooajnpLrmjIfku6TmiafooYzlpLHotKUKIwkgcmVzdWx0WyJmYWlsZWQiXTog6ISa5pys5omn6KGM54q25oCBKOWvueW6lOeUqHN0YXR1cynvvIxUcnVl5oiWRmFsc2Us6K6+572u6K+l5YC85Y+v5Lul5a6a5LmJ6ISa5pys5oiQ5Yqf5oiW5aSx6LSlCiMgCSByZXN1bHRbInN0ZG91dCJdOiDmjIfku6TmiafooYzmiJDlip/ml7bnmoTovpPlh7rmlbDmja4o5a+55bqU55Sob3JpZ2luYWxNc2cpCiMgICAgcmVzdWx0WyJzdGRlcnIiXe+8muaMh+S7pOaJp+ihjOWHuumUmeaXtueahOaPj+i/sOS/oeaBrwojICAgIHJlc3VsdFsibXNnIl3vvJrnlKjmiLfoh6rlrprkuYnnmoTplJnor6/mj4/ov7Dkv6Hmga8o6ISa5pys5aSx6LSl5pe25a+55bqUZGV0YWlsKe+8jOWmguW3oeajgENQVeaMh+agh+W8guW4uAojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBwbGVhc2UgZWRpdCB5b3VyIGNvZGUgaGVyZToKZGVmIG1haW4oc2VsZiwgdGFza192YXJzKToKICAgIHJhaXNlIEV4Y2VwdGlvbih0YXNrX3ZhcnMpCiAgICBzZWxmLl90YXNrLmFyZ3NbJ19yYXdfcGFyYW1zJ10gPSAnaWZjb25maWcnCiAgICByZXN1bHQgPSBzZWxmLmV4ZWN1dGVfY21kKHRhc2tfdmFycykKICAgIHJldHVybiByZXN1bHQ="
      },
      {
        "id": "3bb82f79ebd54240af4cc9a182c9931a",
        "createBy": "10195",
        "createDate": "2023-03-22 16:47:13",
        "updateBy": "10195",
        "updateDate": "2023-03-22 16:50:03",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "zjivim5-hc-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "14a690b5d07c482dbcec0252431be8ca,3151e6a784c4474799f1892733fab237,4bf77dba9368476daf145af2ea4da034,7b930cc3c07a4fbd85d456fa0ac15a34,904f2902d85e432bb31c275024241ef2,96d308bbf3d348aca03f3fc32e1050e0",
        "hostCount": 6,
        "okCount": 6,
        "failCount": 0,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "zjivim5-hc-脚本执行",
        "duration": 170,
        "executeDate": "2023-03-22",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "forward_online_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n# _task.args字典说明\n#     command: 发送到远端网络设备的命令。\n#\n# result字典说明:\n#     failed: 布尔值, 命令是否执行成功。\n#     stdout: 命令的标准输出。\n#     msg: 命令的错误输出。\n###################################################################################################\n# please edit your code here:\ndef main(self, task_vars):\n    hostname = task_vars['ansible_name']\n    network_os = task_vars['ansible_network_os'].lower()\n\n    if network_os in [\"zxr10 m6000-8s plus\"]:  # ZTE CE & E-RT\n        str1 = '''\n        show alarm current\n        show ntp status\n        show ntp associations\n        show card-state brief\n        show ip ospf neighbor\n        show ipv6 ospf neighbor\n        show ip bgp neighbor\n        show bfd neighbors all brief\n        show interface brief\n        show ip interface brief\n        show ipv6 interface brief\n        show intf-statistics utilization\n        show processor\n        show fan\n        show power\n        show temperature detail\n        show lacp mc-lag\n        show lacp internal\n        show opticalinfo brief\n        show hardware\n        '''\n    elif network_os in [\"cr16010h-fa\"]:  # H3C S-RT\n        str1 = '''\n        display alarm\n        display ntp-service status\n        display version\n        display device\n        display device verbose\n        display ospf peer\n        display ospfv3 peer\n        display bfd session\n        display bfd session verbose\n        display interface brief\n        display ip int brief\n        display ipv6 interface brief \n        display cpu-usage\n        display memory summary\n        display fan\n        display power\n        display environment\n        display link-aggregation summary \n        display transceiver diagnosis interface\n        display  logbuffer\n        '''\n    elif network_os in [\"eudemon9000e-x4\", \"eudemon9000e-x8\"]:  # Huawei FW\n        str1 = '''\n        display alarm active\n        display ntp status\n        display version\n        display device\n        display ospf peer brief\n        display ospfv3 peer verbose\n        display bfd session all\n        display interface brief\n        display hrp state\n        display health\n        display cpu-usage\n        display memory all\n        display device fan\n        display device power\n        display device temperature\n        display switchover state\n        display eth-trunk\n        display interface transceiver verbose\n        '''\n    elif network_os in [\"zxr10 9908\"]:  # ZTE EOR\n        str1 = '''\n        show alarm current\n        show ntp status\n        show ntp associations\n        show board-info \n        show ip ospf neighbor\n        show ipv6 ospf neighbor\n        show ip bgp neighbor\n        show bfd neighbors all brief\n        show interface brief\n        show ip interface brief\n        show ipv6 interface brief\n        show intf-statistics utilization\n        show lacp mc-lag-global\n        show processor\n        show fan\n        show power\n        show temperature\n        show lacp mc-lag \n        show lacp internal\n        show optical-inform brief shelf 0\n        show health 0\n        '''\n    elif network_os in [\"zxr10 5960-72dl\", \"zxr10 5960-72dl-h\", \"zxr10 5960-72dl-hm\", \"zxr10 5960-56qu-hc\"]:  # ZTE M&S&ST-TOR\n        str1 = '''\n        show alarm current\n        show ntp status\n        show ntp associations\n        show board-info \n        show ip ospf neighbor\n        show ipv6 ospf neighbor\n        show ip bgp neighbor\n        show bfd neighbors all brief\n        show interface brief\n        show ip interface brief\n        show ipv6 interface brief\n        show intf-statistics utilization\n        show lacp mc-lag-global\n        show processor\n        show fan\n        show power\n        show temperature detail \n        show lacp mc-lag \n        show lacp internal\n        show optical-inform brief shelf 0\n        show health-status \n        '''\n    elif network_os in [\"s5560x-54c-ei\"]:  # H3C DM-TOR\n        str1 = '''\n        display ntp-service status\n        display version\n        display device\n        display device verbose\n        display ospf peer\n        display ospfv3 peer\n        display bfd session\n        display bfd session verbose\n        display interface brief\n        display ip int brief\n        display ipv6 interface brief \n        display cpu-usage\n        display memory summary\n        display fan\n        display power\n        display environment\n        display link-aggregation summary \n        display transceiver diagnosis interface\n        display  logbuffer\n        '''\n    else:\n        return not_support(task_vars)\n\n    commands = [i.strip() for i in str1.strip().splitlines() if i]\n    log_list = []\n    i = 1\n    for cmd in commands:\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        log = 'hostName: ' + hostname + '\\n' + 'taskName: ' + cmd + '\\n' + 'orgMsg: \\n' + result.get(\n            \"stdout\") + '\\n' + 'taskNum: ' + str(i) + '\\n\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n'\n        log_list.append(log)\n        i += 1\n    result = {\n        'rc': 0,\n        'stdout': \"\".join(log_list)\n    }\n    return result\n\n\ndef not_support(task_vars):\n    return {\n        \"skipped\": True,\n        \"skip_reason\": f\"Host type ({task_vars['ansible_network_os']}) is not support.\"\n    }\n",
        "scriptBase64Code": "IyB2ZXJzaW9uOiBQeXRob24zCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIF90YXNrLmFyZ3PlrZflhbjor7TmmI4KIyAgICAgY29tbWFuZDog5Y+R6YCB5Yiw6L+c56uv572R57uc6K6+5aSH55qE5ZG95Luk44CCCiMKIyByZXN1bHTlrZflhbjor7TmmI46CiMgICAgIGZhaWxlZDog5biD5bCU5YC8LCDlkb3ku6TmmK/lkKbmiafooYzmiJDlip/jgIIKIyAgICAgc3Rkb3V0OiDlkb3ku6TnmoTmoIflh4bovpPlh7rjgIIKIyAgICAgbXNnOiDlkb3ku6TnmoTplJnor6/ovpPlh7rjgIIKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgcGxlYXNlIGVkaXQgeW91ciBjb2RlIGhlcmU6CmRlZiBtYWluKHNlbGYsIHRhc2tfdmFycyk6CiAgICBob3N0bmFtZSA9IHRhc2tfdmFyc1snYW5zaWJsZV9uYW1lJ10KICAgIG5ldHdvcmtfb3MgPSB0YXNrX3ZhcnNbJ2Fuc2libGVfbmV0d29ya19vcyddLmxvd2VyKCkKCiAgICBpZiBuZXR3b3JrX29zIGluIFsienhyMTAgbTYwMDAtOHMgcGx1cyJdOiAgIyBaVEUgQ0UgJiBFLVJUCiAgICAgICAgc3RyMSA9ICcnJwogICAgICAgIHNob3cgYWxhcm0gY3VycmVudAogICAgICAgIHNob3cgbnRwIHN0YXR1cwogICAgICAgIHNob3cgbnRwIGFzc29jaWF0aW9ucwogICAgICAgIHNob3cgY2FyZC1zdGF0ZSBicmllZgogICAgICAgIHNob3cgaXAgb3NwZiBuZWlnaGJvcgogICAgICAgIHNob3cgaXB2NiBvc3BmIG5laWdoYm9yCiAgICAgICAgc2hvdyBpcCBiZ3AgbmVpZ2hib3IKICAgICAgICBzaG93IGJmZCBuZWlnaGJvcnMgYWxsIGJyaWVmCiAgICAgICAgc2hvdyBpbnRlcmZhY2UgYnJpZWYKICAgICAgICBzaG93IGlwIGludGVyZmFjZSBicmllZgogICAgICAgIHNob3cgaXB2NiBpbnRlcmZhY2UgYnJpZWYKICAgICAgICBzaG93IGludGYtc3RhdGlzdGljcyB1dGlsaXphdGlvbgogICAgICAgIHNob3cgcHJvY2Vzc29yCiAgICAgICAgc2hvdyBmYW4KICAgICAgICBzaG93IHBvd2VyCiAgICAgICAgc2hvdyB0ZW1wZXJhdHVyZSBkZXRhaWwKICAgICAgICBzaG93IGxhY3AgbWMtbGFnCiAgICAgICAgc2hvdyBsYWNwIGludGVybmFsCiAgICAgICAgc2hvdyBvcHRpY2FsaW5mbyBicmllZgogICAgICAgIHNob3cgaGFyZHdhcmUKICAgICAgICAnJycKICAgIGVsaWYgbmV0d29ya19vcyBpbiBbImNyMTYwMTBoLWZhIl06ICAjIEgzQyBTLVJUCiAgICAgICAgc3RyMSA9ICcnJwogICAgICAgIGRpc3BsYXkgYWxhcm0KICAgICAgICBkaXNwbGF5IG50cC1zZXJ2aWNlIHN0YXR1cwogICAgICAgIGRpc3BsYXkgdmVyc2lvbgogICAgICAgIGRpc3BsYXkgZGV2aWNlCiAgICAgICAgZGlzcGxheSBkZXZpY2UgdmVyYm9zZQogICAgICAgIGRpc3BsYXkgb3NwZiBwZWVyCiAgICAgICAgZGlzcGxheSBvc3BmdjMgcGVlcgogICAgICAgIGRpc3BsYXkgYmZkIHNlc3Npb24KICAgICAgICBkaXNwbGF5IGJmZCBzZXNzaW9uIHZlcmJvc2UKICAgICAgICBkaXNwbGF5IGludGVyZmFjZSBicmllZgogICAgICAgIGRpc3BsYXkgaXAgaW50IGJyaWVmCiAgICAgICAgZGlzcGxheSBpcHY2IGludGVyZmFjZSBicmllZiAKICAgICAgICBkaXNwbGF5IGNwdS11c2FnZQogICAgICAgIGRpc3BsYXkgbWVtb3J5IHN1bW1hcnkKICAgICAgICBkaXNwbGF5IGZhbgogICAgICAgIGRpc3BsYXkgcG93ZXIKICAgICAgICBkaXNwbGF5IGVudmlyb25tZW50CiAgICAgICAgZGlzcGxheSBsaW5rLWFnZ3JlZ2F0aW9uIHN1bW1hcnkgCiAgICAgICAgZGlzcGxheSB0cmFuc2NlaXZlciBkaWFnbm9zaXMgaW50ZXJmYWNlCiAgICAgICAgZGlzcGxheSAgbG9nYnVmZmVyCiAgICAgICAgJycnCiAgICBlbGlmIG5ldHdvcmtfb3MgaW4gWyJldWRlbW9uOTAwMGUteDQiLCAiZXVkZW1vbjkwMDBlLXg4Il06ICAjIEh1YXdlaSBGVwogICAgICAgIHN0cjEgPSAnJycKICAgICAgICBkaXNwbGF5IGFsYXJtIGFjdGl2ZQogICAgICAgIGRpc3BsYXkgbnRwIHN0YXR1cwogICAgICAgIGRpc3BsYXkgdmVyc2lvbgogICAgICAgIGRpc3BsYXkgZGV2aWNlCiAgICAgICAgZGlzcGxheSBvc3BmIHBlZXIgYnJpZWYKICAgICAgICBkaXNwbGF5IG9zcGZ2MyBwZWVyIHZlcmJvc2UKICAgICAgICBkaXNwbGF5IGJmZCBzZXNzaW9uIGFsbAogICAgICAgIGRpc3BsYXkgaW50ZXJmYWNlIGJyaWVmCiAgICAgICAgZGlzcGxheSBocnAgc3RhdGUKICAgICAgICBkaXNwbGF5IGhlYWx0aAogICAgICAgIGRpc3BsYXkgY3B1LXVzYWdlCiAgICAgICAgZGlzcGxheSBtZW1vcnkgYWxsCiAgICAgICAgZGlzcGxheSBkZXZpY2UgZmFuCiAgICAgICAgZGlzcGxheSBkZXZpY2UgcG93ZXIKICAgICAgICBkaXNwbGF5IGRldmljZSB0ZW1wZXJhdHVyZQogICAgICAgIGRpc3BsYXkgc3dpdGNob3ZlciBzdGF0ZQogICAgICAgIGRpc3BsYXkgZXRoLXRydW5rCiAgICAgICAgZGlzcGxheSBpbnRlcmZhY2UgdHJhbnNjZWl2ZXIgdmVyYm9zZQogICAgICAgICcnJwogICAgZWxpZiBuZXR3b3JrX29zIGluIFsienhyMTAgOTkwOCJdOiAgIyBaVEUgRU9SCiAgICAgICAgc3RyMSA9ICcnJwogICAgICAgIHNob3cgYWxhcm0gY3VycmVudAogICAgICAgIHNob3cgbnRwIHN0YXR1cwogICAgICAgIHNob3cgbnRwIGFzc29jaWF0aW9ucwogICAgICAgIHNob3cgYm9hcmQtaW5mbyAKICAgICAgICBzaG93IGlwIG9zcGYgbmVpZ2hib3IKICAgICAgICBzaG93IGlwdjYgb3NwZiBuZWlnaGJvcgogICAgICAgIHNob3cgaXAgYmdwIG5laWdoYm9yCiAgICAgICAgc2hvdyBiZmQgbmVpZ2hib3JzIGFsbCBicmllZgogICAgICAgIHNob3cgaW50ZXJmYWNlIGJyaWVmCiAgICAgICAgc2hvdyBpcCBpbnRlcmZhY2UgYnJpZWYKICAgICAgICBzaG93IGlwdjYgaW50ZXJmYWNlIGJyaWVmCiAgICAgICAgc2hvdyBpbnRmLXN0YXRpc3RpY3MgdXRpbGl6YXRpb24KICAgICAgICBzaG93IGxhY3AgbWMtbGFnLWdsb2JhbAogICAgICAgIHNob3cgcHJvY2Vzc29yCiAgICAgICAgc2hvdyBmYW4KICAgICAgICBzaG93IHBvd2VyCiAgICAgICAgc2hvdyB0ZW1wZXJhdHVyZQogICAgICAgIHNob3cgbGFjcCBtYy1sYWcgCiAgICAgICAgc2hvdyBsYWNwIGludGVybmFsCiAgICAgICAgc2hvdyBvcHRpY2FsLWluZm9ybSBicmllZiBzaGVsZiAwCiAgICAgICAgc2hvdyBoZWFsdGggMAogICAgICAgICcnJwogICAgZWxpZiBuZXR3b3JrX29zIGluIFsienhyMTAgNTk2MC03MmRsIiwgInp4cjEwIDU5NjAtNzJkbC1oIiwgInp4cjEwIDU5NjAtNzJkbC1obSIsICJ6eHIxMCA1OTYwLTU2cXUtaGMiXTogICMgWlRFIE0mUyZTVC1UT1IKICAgICAgICBzdHIxID0gJycnCiAgICAgICAgc2hvdyBhbGFybSBjdXJyZW50CiAgICAgICAgc2hvdyBudHAgc3RhdHVzCiAgICAgICAgc2hvdyBudHAgYXNzb2NpYXRpb25zCiAgICAgICAgc2hvdyBib2FyZC1pbmZvIAogICAgICAgIHNob3cgaXAgb3NwZiBuZWlnaGJvcgogICAgICAgIHNob3cgaXB2NiBvc3BmIG5laWdoYm9yCiAgICAgICAgc2hvdyBpcCBiZ3AgbmVpZ2hib3IKICAgICAgICBzaG93IGJmZCBuZWlnaGJvcnMgYWxsIGJyaWVmCiAgICAgICAgc2hvdyBpbnRlcmZhY2UgYnJpZWYKICAgICAgICBzaG93IGlwIGludGVyZmFjZSBicmllZgogICAgICAgIHNob3cgaXB2NiBpbnRlcmZhY2UgYnJpZWYKICAgICAgICBzaG93IGludGYtc3RhdGlzdGljcyB1dGlsaXphdGlvbgogICAgICAgIHNob3cgbGFjcCBtYy1sYWctZ2xvYmFsCiAgICAgICAgc2hvdyBwcm9jZXNzb3IKICAgICAgICBzaG93IGZhbgogICAgICAgIHNob3cgcG93ZXIKICAgICAgICBzaG93IHRlbXBlcmF0dXJlIGRldGFpbCAKICAgICAgICBzaG93IGxhY3AgbWMtbGFnIAogICAgICAgIHNob3cgbGFjcCBpbnRlcm5hbAogICAgICAgIHNob3cgb3B0aWNhbC1pbmZvcm0gYnJpZWYgc2hlbGYgMAogICAgICAgIHNob3cgaGVhbHRoLXN0YXR1cyAKICAgICAgICAnJycKICAgIGVsaWYgbmV0d29ya19vcyBpbiBbInM1NTYweC01NGMtZWkiXTogICMgSDNDIERNLVRPUgogICAgICAgIHN0cjEgPSAnJycKICAgICAgICBkaXNwbGF5IG50cC1zZXJ2aWNlIHN0YXR1cwogICAgICAgIGRpc3BsYXkgdmVyc2lvbgogICAgICAgIGRpc3BsYXkgZGV2aWNlCiAgICAgICAgZGlzcGxheSBkZXZpY2UgdmVyYm9zZQogICAgICAgIGRpc3BsYXkgb3NwZiBwZWVyCiAgICAgICAgZGlzcGxheSBvc3BmdjMgcGVlcgogICAgICAgIGRpc3BsYXkgYmZkIHNlc3Npb24KICAgICAgICBkaXNwbGF5IGJmZCBzZXNzaW9uIHZlcmJvc2UKICAgICAgICBkaXNwbGF5IGludGVyZmFjZSBicmllZgogICAgICAgIGRpc3BsYXkgaXAgaW50IGJyaWVmCiAgICAgICAgZGlzcGxheSBpcHY2IGludGVyZmFjZSBicmllZiAKICAgICAgICBkaXNwbGF5IGNwdS11c2FnZQogICAgICAgIGRpc3BsYXkgbWVtb3J5IHN1bW1hcnkKICAgICAgICBkaXNwbGF5IGZhbgogICAgICAgIGRpc3BsYXkgcG93ZXIKICAgICAgICBkaXNwbGF5IGVudmlyb25tZW50CiAgICAgICAgZGlzcGxheSBsaW5rLWFnZ3JlZ2F0aW9uIHN1bW1hcnkgCiAgICAgICAgZGlzcGxheSB0cmFuc2NlaXZlciBkaWFnbm9zaXMgaW50ZXJmYWNlCiAgICAgICAgZGlzcGxheSAgbG9nYnVmZmVyCiAgICAgICAgJycnCiAgICBlbHNlOgogICAgICAgIHJldHVybiBub3Rfc3VwcG9ydCh0YXNrX3ZhcnMpCgogICAgY29tbWFuZHMgPSBbaS5zdHJpcCgpIGZvciBpIGluIHN0cjEuc3RyaXAoKS5zcGxpdGxpbmVzKCkgaWYgaV0KICAgIGxvZ19saXN0ID0gW10KICAgIGkgPSAxCiAgICBmb3IgY21kIGluIGNvbW1hbmRzOgogICAgICAgIHNlbGYuX3Rhc2suYXJnc1snY29tbWFuZCddID0gY21kCiAgICAgICAgcmVzdWx0ID0gc2VsZi5leGVjdXRlX2NtZCh0YXNrX3ZhcnMpCiAgICAgICAgbG9nID0gJ2hvc3ROYW1lOiAnICsgaG9zdG5hbWUgKyAnXG4nICsgJ3Rhc2tOYW1lOiAnICsgY21kICsgJ1xuJyArICdvcmdNc2c6IFxuJyArIHJlc3VsdC5nZXQoCiAgICAgICAgICAgICJzdGRvdXQiKSArICdcbicgKyAndGFza051bTogJyArIHN0cihpKSArICdcblxuJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCRcbicKICAgICAgICBsb2dfbGlzdC5hcHBlbmQobG9nKQogICAgICAgIGkgKz0gMQogICAgcmVzdWx0ID0gewogICAgICAgICdyYyc6IDAsCiAgICAgICAgJ3N0ZG91dCc6ICIiLmpvaW4obG9nX2xpc3QpCiAgICB9CiAgICByZXR1cm4gcmVzdWx0CgoKZGVmIG5vdF9zdXBwb3J0KHRhc2tfdmFycyk6CiAgICByZXR1cm4gewogICAgICAgICJza2lwcGVkIjogVHJ1ZSwKICAgICAgICAic2tpcF9yZWFzb24iOiBmIkhvc3QgdHlwZSAoe3Rhc2tfdmFyc1snYW5zaWJsZV9uZXR3b3JrX29zJ119KSBpcyBub3Qgc3VwcG9ydC4iCiAgICB9Cg=="
      },
      {
        "id": "9e89903070e343a480fa88845844ddfc",
        "createBy": "10195",
        "createDate": "2023-03-22 16:46:00",
        "updateBy": "10195",
        "updateDate": "2023-03-22 16:46:29",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "zjivim4-hc-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "1678b19baaac4b2cb81a4e6f41a55ab1,5a95c503b4da4a0184abe4d6ba2fc8c9,5cfb1beb8ad14a3b9826fbc353012dd0,5f449016307f4d93a10bc2cb69a129a8,666641d89c174f6d9b29f2169d56e4ef,f94e9242c0034e38aaf05807279a5958",
        "hostCount": 6,
        "okCount": 6,
        "failCount": 0,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "zjivim4-hc-脚本执行",
        "duration": 29,
        "executeDate": "2023-03-22",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "forward_online_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n# _task.args字典说明\n#     command: 发送到远端网络设备的命令。\n#\n# result字典说明:\n#     failed: 布尔值, 命令是否执行成功。\n#     stdout: 命令的标准输出。\n#     msg: 命令的错误输出。\n###################################################################################################\n# please edit your code here:\ndef main(self, task_vars):\n    hostname = task_vars['ansible_name']\n    network_os = task_vars['ansible_network_os'].lower()\n\n    if network_os in [\"zxr10 m6000-8s plus\"]:  # ZTE CE\n        str1 = '''\n        show alarm current\n        show ntp status\n        show ntp associations\n        show card-state brief\n        show ip ospf neighbor\n        show ipv6 ospf neighbor\n        show ip bgp neighbor\n        show bfd neighbors all brief\n        show interface brief\n        show ip interface brief\n        show ipv6 interface brief\n        show intf-statistics utilization\n        show processor\n        show fan\n        show power\n        show temperature detail\n        show lacp mc-lag\n        show lacp internal\n        show opticalinfo brief\n        show hardware\n        '''\n    elif network_os in [\"cr16010h-fa\"]:  # H3C E-RT\n        str1 = '''\n        display alarm\n        display ntp status\n        display version\n        display device\n        display device verbose\n        display ospf peer\n        display ospfv3 peer\n        display bfd session\n        display bfd session verbose\n        display interface brief\n        display ip int brief\n        display ipv6 interface brief \n        display cpu-usage\n        display memory summary\n        display health \n        display fan\n        display power-information\n        display environment\n        display link-aggregation summary\n        display transceiver diagnosis interface\n        display  logbuffer\n        '''\n    elif network_os in [\"eudemon9000e-x4\", \"eudemon9000e-x8\"]:  # Huawei FW\n        str1 = '''\n        display alarm active\n        display ntp status\n        display version\n        display device\n        display ospf peer brief\n        display ospfv3 peer verbose\n        display bfd session all\n        display interface brief\n        display hrp state\n        display health\n        display cpu-usage\n        display memory all\n        display device fan\n        display device power\n        display device temperature\n        display switchover state \n        display eth-trunk\n        display interface transceiver verbose\n        '''\n    elif network_os in [\"s12508f-af\"]:  # H3C EOR\n        str1 = '''\n        display alarm\n        display ntp-service status\n        display version\n        display device\n        display device verbose\n        display ospf peer\n        display ospfv3 peer\n        display bfd session\n        display bfd session verbose\n        display interface brief\n        display ip int brief\n        display ipv6 interface brief\n        display cpu-usage\n        display memory summary\n        display fan\n        display power\n        display environment\n        display link-aggregation summary\n        display transceiver diagnosis interface\n        display  logbuffer\n        '''\n    elif network_os in [\"s6900-54qf-f\", \"s6850-56hf\"]:  # H3C M&S&ST-TOR\n        str1 = '''\n        display alarm\n        display ntp-service status\n        display version\n        display device\n        display device verbose\n        display ospf peer\n        display ospfv3 peer\n        display bfd session\n        display bfd session verbose\n        display interface brief\n        display ip int brief\n        display ipv6 interface brief \n        display cpu-usage\n        display memory summary\n        display fan\n        display power\n        display environment\n        display link-aggregation summary\n        display transceiver diagnosis interface\n        display  logbuffer\n        '''\n    elif network_os in [\"s5560x-54c-ei\"]:  # H3C DM-TOR\n        str1 = '''\n        display ntp-service status\n        display version\n        display device\n        display device verbose\n        display ospf peer\n        display ospfv3 peer\n        display bfd session\n        display bfd session verbose\n        display interface brief\n        display ip int brief\n        display ipv6 interface brief\n        display cpu-usage\n        display memory summary\n        display fan\n        display power\n        display environment\n        display link-aggregation summary\n        display transceiver diagnosis interface\n        display  logbuffer\n        '''\n    else:\n        return not_support(task_vars)\n\n    commands = [i.strip() for i in str1.strip().splitlines() if i]\n    log_list = []\n    i = 1\n    for cmd in commands:\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        log = 'hostName: ' + hostname + '\\n' + 'taskName: ' + cmd + '\\n' + 'orgMsg: \\n' + result.get(\n            \"stdout\") + '\\n' + 'taskNum: ' + str(i) + '\\n\\n$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\\n'\n        log_list.append(log)\n        i += 1\n    result = {\n        'rc': 0,\n        'stdout': \"\".join(log_list)\n    }\n    return result\n\n\ndef not_support(task_vars):\n    return {\n        \"skipped\": True,\n        \"skip_reason\": f\"Host type ({task_vars['ansible_network_os']}) is not support.\"\n    }\n",
        "scriptBase64Code": "IyB2ZXJzaW9uOiBQeXRob24zCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIF90YXNrLmFyZ3PlrZflhbjor7TmmI4KIyAgICAgY29tbWFuZDog5Y+R6YCB5Yiw6L+c56uv572R57uc6K6+5aSH55qE5ZG95Luk44CCCiMKIyByZXN1bHTlrZflhbjor7TmmI46CiMgICAgIGZhaWxlZDog5biD5bCU5YC8LCDlkb3ku6TmmK/lkKbmiafooYzmiJDlip/jgIIKIyAgICAgc3Rkb3V0OiDlkb3ku6TnmoTmoIflh4bovpPlh7rjgIIKIyAgICAgbXNnOiDlkb3ku6TnmoTplJnor6/ovpPlh7rjgIIKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgcGxlYXNlIGVkaXQgeW91ciBjb2RlIGhlcmU6CmRlZiBtYWluKHNlbGYsIHRhc2tfdmFycyk6CiAgICBob3N0bmFtZSA9IHRhc2tfdmFyc1snYW5zaWJsZV9uYW1lJ10KICAgIG5ldHdvcmtfb3MgPSB0YXNrX3ZhcnNbJ2Fuc2libGVfbmV0d29ya19vcyddLmxvd2VyKCkKCiAgICBpZiBuZXR3b3JrX29zIGluIFsienhyMTAgbTYwMDAtOHMgcGx1cyJdOiAgIyBaVEUgQ0UKICAgICAgICBzdHIxID0gJycnCiAgICAgICAgc2hvdyBhbGFybSBjdXJyZW50CiAgICAgICAgc2hvdyBudHAgc3RhdHVzCiAgICAgICAgc2hvdyBudHAgYXNzb2NpYXRpb25zCiAgICAgICAgc2hvdyBjYXJkLXN0YXRlIGJyaWVmCiAgICAgICAgc2hvdyBpcCBvc3BmIG5laWdoYm9yCiAgICAgICAgc2hvdyBpcHY2IG9zcGYgbmVpZ2hib3IKICAgICAgICBzaG93IGlwIGJncCBuZWlnaGJvcgogICAgICAgIHNob3cgYmZkIG5laWdoYm9ycyBhbGwgYnJpZWYKICAgICAgICBzaG93IGludGVyZmFjZSBicmllZgogICAgICAgIHNob3cgaXAgaW50ZXJmYWNlIGJyaWVmCiAgICAgICAgc2hvdyBpcHY2IGludGVyZmFjZSBicmllZgogICAgICAgIHNob3cgaW50Zi1zdGF0aXN0aWNzIHV0aWxpemF0aW9uCiAgICAgICAgc2hvdyBwcm9jZXNzb3IKICAgICAgICBzaG93IGZhbgogICAgICAgIHNob3cgcG93ZXIKICAgICAgICBzaG93IHRlbXBlcmF0dXJlIGRldGFpbAogICAgICAgIHNob3cgbGFjcCBtYy1sYWcKICAgICAgICBzaG93IGxhY3AgaW50ZXJuYWwKICAgICAgICBzaG93IG9wdGljYWxpbmZvIGJyaWVmCiAgICAgICAgc2hvdyBoYXJkd2FyZQogICAgICAgICcnJwogICAgZWxpZiBuZXR3b3JrX29zIGluIFsiY3IxNjAxMGgtZmEiXTogICMgSDNDIEUtUlQKICAgICAgICBzdHIxID0gJycnCiAgICAgICAgZGlzcGxheSBhbGFybQogICAgICAgIGRpc3BsYXkgbnRwIHN0YXR1cwogICAgICAgIGRpc3BsYXkgdmVyc2lvbgogICAgICAgIGRpc3BsYXkgZGV2aWNlCiAgICAgICAgZGlzcGxheSBkZXZpY2UgdmVyYm9zZQogICAgICAgIGRpc3BsYXkgb3NwZiBwZWVyCiAgICAgICAgZGlzcGxheSBvc3BmdjMgcGVlcgogICAgICAgIGRpc3BsYXkgYmZkIHNlc3Npb24KICAgICAgICBkaXNwbGF5IGJmZCBzZXNzaW9uIHZlcmJvc2UKICAgICAgICBkaXNwbGF5IGludGVyZmFjZSBicmllZgogICAgICAgIGRpc3BsYXkgaXAgaW50IGJyaWVmCiAgICAgICAgZGlzcGxheSBpcHY2IGludGVyZmFjZSBicmllZiAKICAgICAgICBkaXNwbGF5IGNwdS11c2FnZQogICAgICAgIGRpc3BsYXkgbWVtb3J5IHN1bW1hcnkKICAgICAgICBkaXNwbGF5IGhlYWx0aCAKICAgICAgICBkaXNwbGF5IGZhbgogICAgICAgIGRpc3BsYXkgcG93ZXItaW5mb3JtYXRpb24KICAgICAgICBkaXNwbGF5IGVudmlyb25tZW50CiAgICAgICAgZGlzcGxheSBsaW5rLWFnZ3JlZ2F0aW9uIHN1bW1hcnkKICAgICAgICBkaXNwbGF5IHRyYW5zY2VpdmVyIGRpYWdub3NpcyBpbnRlcmZhY2UKICAgICAgICBkaXNwbGF5ICBsb2didWZmZXIKICAgICAgICAnJycKICAgIGVsaWYgbmV0d29ya19vcyBpbiBbImV1ZGVtb245MDAwZS14NCIsICJldWRlbW9uOTAwMGUteDgiXTogICMgSHVhd2VpIEZXCiAgICAgICAgc3RyMSA9ICcnJwogICAgICAgIGRpc3BsYXkgYWxhcm0gYWN0aXZlCiAgICAgICAgZGlzcGxheSBudHAgc3RhdHVzCiAgICAgICAgZGlzcGxheSB2ZXJzaW9uCiAgICAgICAgZGlzcGxheSBkZXZpY2UKICAgICAgICBkaXNwbGF5IG9zcGYgcGVlciBicmllZgogICAgICAgIGRpc3BsYXkgb3NwZnYzIHBlZXIgdmVyYm9zZQogICAgICAgIGRpc3BsYXkgYmZkIHNlc3Npb24gYWxsCiAgICAgICAgZGlzcGxheSBpbnRlcmZhY2UgYnJpZWYKICAgICAgICBkaXNwbGF5IGhycCBzdGF0ZQogICAgICAgIGRpc3BsYXkgaGVhbHRoCiAgICAgICAgZGlzcGxheSBjcHUtdXNhZ2UKICAgICAgICBkaXNwbGF5IG1lbW9yeSBhbGwKICAgICAgICBkaXNwbGF5IGRldmljZSBmYW4KICAgICAgICBkaXNwbGF5IGRldmljZSBwb3dlcgogICAgICAgIGRpc3BsYXkgZGV2aWNlIHRlbXBlcmF0dXJlCiAgICAgICAgZGlzcGxheSBzd2l0Y2hvdmVyIHN0YXRlIAogICAgICAgIGRpc3BsYXkgZXRoLXRydW5rCiAgICAgICAgZGlzcGxheSBpbnRlcmZhY2UgdHJhbnNjZWl2ZXIgdmVyYm9zZQogICAgICAgICcnJwogICAgZWxpZiBuZXR3b3JrX29zIGluIFsiczEyNTA4Zi1hZiJdOiAgIyBIM0MgRU9SCiAgICAgICAgc3RyMSA9ICcnJwogICAgICAgIGRpc3BsYXkgYWxhcm0KICAgICAgICBkaXNwbGF5IG50cC1zZXJ2aWNlIHN0YXR1cwogICAgICAgIGRpc3BsYXkgdmVyc2lvbgogICAgICAgIGRpc3BsYXkgZGV2aWNlCiAgICAgICAgZGlzcGxheSBkZXZpY2UgdmVyYm9zZQogICAgICAgIGRpc3BsYXkgb3NwZiBwZWVyCiAgICAgICAgZGlzcGxheSBvc3BmdjMgcGVlcgogICAgICAgIGRpc3BsYXkgYmZkIHNlc3Npb24KICAgICAgICBkaXNwbGF5IGJmZCBzZXNzaW9uIHZlcmJvc2UKICAgICAgICBkaXNwbGF5IGludGVyZmFjZSBicmllZgogICAgICAgIGRpc3BsYXkgaXAgaW50IGJyaWVmCiAgICAgICAgZGlzcGxheSBpcHY2IGludGVyZmFjZSBicmllZgogICAgICAgIGRpc3BsYXkgY3B1LXVzYWdlCiAgICAgICAgZGlzcGxheSBtZW1vcnkgc3VtbWFyeQogICAgICAgIGRpc3BsYXkgZmFuCiAgICAgICAgZGlzcGxheSBwb3dlcgogICAgICAgIGRpc3BsYXkgZW52aXJvbm1lbnQKICAgICAgICBkaXNwbGF5IGxpbmstYWdncmVnYXRpb24gc3VtbWFyeQogICAgICAgIGRpc3BsYXkgdHJhbnNjZWl2ZXIgZGlhZ25vc2lzIGludGVyZmFjZQogICAgICAgIGRpc3BsYXkgIGxvZ2J1ZmZlcgogICAgICAgICcnJwogICAgZWxpZiBuZXR3b3JrX29zIGluIFsiczY5MDAtNTRxZi1mIiwgInM2ODUwLTU2aGYiXTogICMgSDNDIE0mUyZTVC1UT1IKICAgICAgICBzdHIxID0gJycnCiAgICAgICAgZGlzcGxheSBhbGFybQogICAgICAgIGRpc3BsYXkgbnRwLXNlcnZpY2Ugc3RhdHVzCiAgICAgICAgZGlzcGxheSB2ZXJzaW9uCiAgICAgICAgZGlzcGxheSBkZXZpY2UKICAgICAgICBkaXNwbGF5IGRldmljZSB2ZXJib3NlCiAgICAgICAgZGlzcGxheSBvc3BmIHBlZXIKICAgICAgICBkaXNwbGF5IG9zcGZ2MyBwZWVyCiAgICAgICAgZGlzcGxheSBiZmQgc2Vzc2lvbgogICAgICAgIGRpc3BsYXkgYmZkIHNlc3Npb24gdmVyYm9zZQogICAgICAgIGRpc3BsYXkgaW50ZXJmYWNlIGJyaWVmCiAgICAgICAgZGlzcGxheSBpcCBpbnQgYnJpZWYKICAgICAgICBkaXNwbGF5IGlwdjYgaW50ZXJmYWNlIGJyaWVmIAogICAgICAgIGRpc3BsYXkgY3B1LXVzYWdlCiAgICAgICAgZGlzcGxheSBtZW1vcnkgc3VtbWFyeQogICAgICAgIGRpc3BsYXkgZmFuCiAgICAgICAgZGlzcGxheSBwb3dlcgogICAgICAgIGRpc3BsYXkgZW52aXJvbm1lbnQKICAgICAgICBkaXNwbGF5IGxpbmstYWdncmVnYXRpb24gc3VtbWFyeQogICAgICAgIGRpc3BsYXkgdHJhbnNjZWl2ZXIgZGlhZ25vc2lzIGludGVyZmFjZQogICAgICAgIGRpc3BsYXkgIGxvZ2J1ZmZlcgogICAgICAgICcnJwogICAgZWxpZiBuZXR3b3JrX29zIGluIFsiczU1NjB4LTU0Yy1laSJdOiAgIyBIM0MgRE0tVE9SCiAgICAgICAgc3RyMSA9ICcnJwogICAgICAgIGRpc3BsYXkgbnRwLXNlcnZpY2Ugc3RhdHVzCiAgICAgICAgZGlzcGxheSB2ZXJzaW9uCiAgICAgICAgZGlzcGxheSBkZXZpY2UKICAgICAgICBkaXNwbGF5IGRldmljZSB2ZXJib3NlCiAgICAgICAgZGlzcGxheSBvc3BmIHBlZXIKICAgICAgICBkaXNwbGF5IG9zcGZ2MyBwZWVyCiAgICAgICAgZGlzcGxheSBiZmQgc2Vzc2lvbgogICAgICAgIGRpc3BsYXkgYmZkIHNlc3Npb24gdmVyYm9zZQogICAgICAgIGRpc3BsYXkgaW50ZXJmYWNlIGJyaWVmCiAgICAgICAgZGlzcGxheSBpcCBpbnQgYnJpZWYKICAgICAgICBkaXNwbGF5IGlwdjYgaW50ZXJmYWNlIGJyaWVmCiAgICAgICAgZGlzcGxheSBjcHUtdXNhZ2UKICAgICAgICBkaXNwbGF5IG1lbW9yeSBzdW1tYXJ5CiAgICAgICAgZGlzcGxheSBmYW4KICAgICAgICBkaXNwbGF5IHBvd2VyCiAgICAgICAgZGlzcGxheSBlbnZpcm9ubWVudAogICAgICAgIGRpc3BsYXkgbGluay1hZ2dyZWdhdGlvbiBzdW1tYXJ5CiAgICAgICAgZGlzcGxheSB0cmFuc2NlaXZlciBkaWFnbm9zaXMgaW50ZXJmYWNlCiAgICAgICAgZGlzcGxheSAgbG9nYnVmZmVyCiAgICAgICAgJycnCiAgICBlbHNlOgogICAgICAgIHJldHVybiBub3Rfc3VwcG9ydCh0YXNrX3ZhcnMpCgogICAgY29tbWFuZHMgPSBbaS5zdHJpcCgpIGZvciBpIGluIHN0cjEuc3RyaXAoKS5zcGxpdGxpbmVzKCkgaWYgaV0KICAgIGxvZ19saXN0ID0gW10KICAgIGkgPSAxCiAgICBmb3IgY21kIGluIGNvbW1hbmRzOgogICAgICAgIHNlbGYuX3Rhc2suYXJnc1snY29tbWFuZCddID0gY21kCiAgICAgICAgcmVzdWx0ID0gc2VsZi5leGVjdXRlX2NtZCh0YXNrX3ZhcnMpCiAgICAgICAgbG9nID0gJ2hvc3ROYW1lOiAnICsgaG9zdG5hbWUgKyAnXG4nICsgJ3Rhc2tOYW1lOiAnICsgY21kICsgJ1xuJyArICdvcmdNc2c6IFxuJyArIHJlc3VsdC5nZXQoCiAgICAgICAgICAgICJzdGRvdXQiKSArICdcbicgKyAndGFza051bTogJyArIHN0cihpKSArICdcblxuJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCRcbicKICAgICAgICBsb2dfbGlzdC5hcHBlbmQobG9nKQogICAgICAgIGkgKz0gMQogICAgcmVzdWx0ID0gewogICAgICAgICdyYyc6IDAsCiAgICAgICAgJ3N0ZG91dCc6ICIiLmpvaW4obG9nX2xpc3QpCiAgICB9CiAgICByZXR1cm4gcmVzdWx0CgoKZGVmIG5vdF9zdXBwb3J0KHRhc2tfdmFycyk6CiAgICByZXR1cm4gewogICAgICAgICJza2lwcGVkIjogVHJ1ZSwKICAgICAgICAic2tpcF9yZWFzb24iOiBmIkhvc3QgdHlwZSAoe3Rhc2tfdmFyc1snYW5zaWJsZV9uZXR3b3JrX29zJ119KSBpcyBub3Qgc3VwcG9ydC4iCiAgICB9Cg=="
      },
      {
        "id": "82aeb26c45b54f4ea235197059ead8c9",
        "createBy": "10149",
        "createDate": "2023-03-22 11:17:35",
        "updateBy": "10149",
        "updateDate": "2023-03-22 11:17:55",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "console密码修改完整版-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "0e0c780c97cb4769a32371baf9c7f1fd,1592014940a847bba767f29186de4ba1,2e14d5e16f934192aed024fc55ee8727,394a429282624ed8995fa29a5c551625,4006a3a2309e497ea73451a3f480754d,57bdab676103446b9ef00f04325884bc,6524907e7948402f94084e67da1028c5,6c6617497ff1424b92da793c1f3b0a9c,812300a1371643e09a461a5b0bd0a7e5,8f36a65dec87495eb15df90799af992b,9ea94dc97b5647dca5532b7a46790f74,a4bf625e50ef4d5cafa2b9ce501b08df,b1ecdb88c2304f1c9dc896435234187b,c5b0a535d4334c9db3a310122f6248b1,e50e913de325421a9f1df60225642de3,f149aee0e90c453c9b0c9231aab27b62,11d33efbf3dc4c2eafcd88d9066d72ee,1cd47aeda4954954bc58481ee05518a4,313a7647ee5e494a9fdb82dfdb27d446,3ad4922527354eee99df512ca2fd5072,41e2904c954245b7a448633a2a3492d9,59ca1bc8258741eab712b25151072727,658141b851c74b238ff329e301bd755a,743e9c0b43ef4729abf94d68b05aac0a,85ee0126f69c4feb877a6c8a4c0f413b,9644570d6ef3413cb17051d22af45076,9fa441a16b8f41e68552b778a56dc96a,a79689f60a444e1da353d4aa1aad1ffa,bb909612a2b845b8b367c8f4bdc9f96e,cf0641795bbe45d78e032147ec497c64,e7c9cab46a654c8087b29da25f3330d0,f46390adaf89401faec65da3cdec793d,13457b81a17d4ae2bdecf1d287c3fae6,25941bcc5d9040fb8361c58b0edd1b49,37a30a32b7574f2b99baa21a34095d80,3ae544f01b7a4867bebd60b7a410a3c3,4782ba710f2b40a29f90417c30056802,61fa1c72eb2f43d797cf6018cc1c8675,6672457e5de5478989fa36371a1eeda1,748b3476f14a4883a0a87975dfec3285,87239bf8498b4117bbe38eb82e73cfad,9741742a2fab4701924cb925b99a4efd,a34e2a246ac04e62b5f842519f24a56e,ac18d9153c5f410e82659de9e602fdd0,c1b8251dfb384b6bb29601613341f046,d3c7bc7b4f9e4463b4082bfcd32fa037,ea715333e56b4ec2be2403fddf9d3295,fc286e44ac1b4929af5e5dcff7c3a9bd,090282956fe7409bb503486a51507c55,153f51e0165a406cbfa201667a581f81,266bfd371a7a4aa0aca4a25ed024dd67,386a6aa566c7498ba3e4641137a170de,3e910d1c040e4584ae25d907da1d7da0,5722d5eb87ef413d9fcc584eae842f46,62719242f7984b3ebf6827651c561431,6bc51c4932834fb8a86f1967bce6aafa,7c51218dfc1f469da9c195946c4489a7,8f055e3b06284bb7a0dfcfeda768683f,9b21ff3c8c2b485da243da0c55408f39,a438f3608523405c88e1863d027370ae,aca0f8e632104772b5e97cd0b8f9261f,c42dc5c5edf44d76924bb67cd35b5a3a,df77c4ec64904c14818fff9cb9a55dcc,edfbbcfa2232424fa66d9c276d981dae",
        "hostCount": 64,
        "okCount": 64,
        "failCount": 0,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "console密码修改完整版-脚本执行",
        "duration": 19,
        "executeDate": "2023-03-22",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "forward_online_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n# _task.args字典说明\n#     command: 发送到远端网络设备的命令。\n#\n# result字典说明:\n#     failed: 布尔值, 命令是否执行成功。\n#     stdout: 命令的标准输出。\n#     msg: 命令的错误输出。\n###################################################################################################\n# please edit your code here:\nimport re\nimport json\n\ndef main(self, task_vars):\n    # raise Exception(task_vars['ansible_network_os'])\n    host_model = task_vars['ansible_host_model']\n    \n    result = dict()\n    if host_model in ['ce12800', 'ce68', 'ne40e', 'ce16800']:  # Huawei RS\n        result = HW_RS_change_passwd(self, task_vars)\n    elif host_model in ['ZXR10 5960-72DL-H','ZXR10 9908','ZXR10 M6000-8S Plus','ZXR10 M6000-18S','zte_9900', 'zte_59', '5952D','m6000','M6000-8S Plus','5900','ZTE-5960','5960-56QU-HC','ZXR10 5960-72DL-HM','ZXR10 5960-56QU-HC','ZTE-M6000-8S plus','ZTE-9916']:  # ZTE RS\n        result = ZTE_RS_change_passwd(self, task_vars)\n    elif host_model in ['Eudemon9000E-X8-AC','Eudemon9000E-X4-AC','Eudemon9000E-X8','Eudemon9000E-X4','HW-Eudemon9000E-X4','HW-Eudemon9000E-X8']:  # huawei FW\n        result = HW_FW_change_passwd(self, task_vars)\n    elif host_model in ['S6850-56HF','S6900-54QF-F','S5560X-54C-EI','H3C-S5560X-54C-EI']:  # H3C RS\n        result = H3C_RS_change_passwd(self, task_vars)\n    elif host_model in ['S12508F-AF','S12516F-AF']:  # H3C Gaoduan RS\n        result = H3C_RSGD_change_passwd(self, task_vars)\n    elif host_model in ['M9016-V','M9008-S','h3c_m9008','CR16010H-FA']: #H3C FW\n        result = H3C_FW_change_passwd(self, task_vars)\n    elif host_model in ['s4320', 'S4230-54TXF', 'MAIPU-S4230-54TXF']:  # MP\n        result = MP_change_passwd(self, task_vars)\n    elif host_model in ['RG-S6250-48XS8CQ','RG-S6510-48VS8CQ','RG-N18010-X','RG-N18018-X']:\n        result = Ruijie(self, task_vars)\n    else:\n        result = not_support_dev_model(host_model)\n    return result\n\n\ndef not_support_dev_model(host_model):\n    return  {\n        'failed': False,\n        'stdout': \"该巡检项暂不支持{}设备\".format(host_model)\n    }\n\n\n# 'ce12800', 'ce68', 'ne40e', 'ce16800'\ndef HW_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    sys\n    aaa\n    local-user wlyywgzt_devops password cipher xc23@#WE11\n    commit\n    return\n    save\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['be written to the device.']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n#'Eudemon9000E'\ndef HW_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Warning: The current configuration will be written to the device']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n# 'zte_9900', 'zte_59', '5952D'\ndef ZTE_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef H3C_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n##高端H3C设备\ndef H3C_RSGD_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\ndef H3C_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef MP_change_passwd(self, task_vars):\n    str1=\"\"\"\n    configure terminal\n    local-user wlyywgzt_devops class manager\n    password 0 xc23@#WE11\n    end\n    write\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"enable\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['password']\n            self._task.args['answer'] = ['Nfv@1#2%']\n        elif \"write\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Are you sure to overwrite .*']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\ndef Ruijie(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n",
        "scriptBase64Code": ""
      },
      {
        "id": "9d2b7c549ee946a997c3c880d7bd78bd",
        "createBy": "10149",
        "createDate": "2023-03-22 11:16:55",
        "updateBy": "10149",
        "updateDate": "2023-03-22 11:17:15",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "console密码修改完整版-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "0e0c780c97cb4769a32371baf9c7f1fd,1592014940a847bba767f29186de4ba1,2e14d5e16f934192aed024fc55ee8727,394a429282624ed8995fa29a5c551625,4006a3a2309e497ea73451a3f480754d,57bdab676103446b9ef00f04325884bc,6524907e7948402f94084e67da1028c5,6c6617497ff1424b92da793c1f3b0a9c,812300a1371643e09a461a5b0bd0a7e5,8f36a65dec87495eb15df90799af992b,9ea94dc97b5647dca5532b7a46790f74,a4bf625e50ef4d5cafa2b9ce501b08df,b1ecdb88c2304f1c9dc896435234187b,c5b0a535d4334c9db3a310122f6248b1,e50e913de325421a9f1df60225642de3,f149aee0e90c453c9b0c9231aab27b62,11d33efbf3dc4c2eafcd88d9066d72ee,1cd47aeda4954954bc58481ee05518a4,313a7647ee5e494a9fdb82dfdb27d446,3ad4922527354eee99df512ca2fd5072,41e2904c954245b7a448633a2a3492d9,59ca1bc8258741eab712b25151072727,658141b851c74b238ff329e301bd755a,743e9c0b43ef4729abf94d68b05aac0a,85ee0126f69c4feb877a6c8a4c0f413b,9644570d6ef3413cb17051d22af45076,9fa441a16b8f41e68552b778a56dc96a,a79689f60a444e1da353d4aa1aad1ffa,bb909612a2b845b8b367c8f4bdc9f96e,cf0641795bbe45d78e032147ec497c64,e7c9cab46a654c8087b29da25f3330d0,f46390adaf89401faec65da3cdec793d,13457b81a17d4ae2bdecf1d287c3fae6,25941bcc5d9040fb8361c58b0edd1b49,37a30a32b7574f2b99baa21a34095d80,3ae544f01b7a4867bebd60b7a410a3c3,4782ba710f2b40a29f90417c30056802,61fa1c72eb2f43d797cf6018cc1c8675,6672457e5de5478989fa36371a1eeda1,748b3476f14a4883a0a87975dfec3285,87239bf8498b4117bbe38eb82e73cfad,9741742a2fab4701924cb925b99a4efd,a34e2a246ac04e62b5f842519f24a56e,ac18d9153c5f410e82659de9e602fdd0,c1b8251dfb384b6bb29601613341f046,d3c7bc7b4f9e4463b4082bfcd32fa037,ea715333e56b4ec2be2403fddf9d3295,fc286e44ac1b4929af5e5dcff7c3a9bd,090282956fe7409bb503486a51507c55,153f51e0165a406cbfa201667a581f81,266bfd371a7a4aa0aca4a25ed024dd67,386a6aa566c7498ba3e4641137a170de,3e910d1c040e4584ae25d907da1d7da0,5722d5eb87ef413d9fcc584eae842f46,62719242f7984b3ebf6827651c561431,6bc51c4932834fb8a86f1967bce6aafa,7c51218dfc1f469da9c195946c4489a7,8f055e3b06284bb7a0dfcfeda768683f,9b21ff3c8c2b485da243da0c55408f39,a438f3608523405c88e1863d027370ae,aca0f8e632104772b5e97cd0b8f9261f,c42dc5c5edf44d76924bb67cd35b5a3a,df77c4ec64904c14818fff9cb9a55dcc,edfbbcfa2232424fa66d9c276d981dae",
        "hostCount": 64,
        "okCount": 64,
        "failCount": 0,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "console密码修改完整版-脚本执行",
        "duration": 20,
        "executeDate": "2023-03-22",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "forward_online_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n# _task.args字典说明\n#     command: 发送到远端网络设备的命令。\n#\n# result字典说明:\n#     failed: 布尔值, 命令是否执行成功。\n#     stdout: 命令的标准输出。\n#     msg: 命令的错误输出。\n###################################################################################################\n# please edit your code here:\nimport re\nimport json\n\ndef main(self, task_vars):\n    # raise Exception(task_vars['ansible_network_os'])\n    host_model = task_vars['ansible_host_model']\n    \n    result = dict()\n    if host_model in ['ce12800', 'ce68', 'ne40e', 'ce16800']:  # Huawei RS\n        result = HW_RS_change_passwd(self, task_vars)\n    elif host_model in ['ZXR10 5960-72DL-H','ZXR10 9908','ZXR10 M6000-8S Plus','ZXR10 M6000-18S','zte_9900', 'zte_59', '5952D','m6000','M6000-8S Plus','5900','ZTE-5960','5960-56QU-HC','ZXR10 5960-72DL-HM','ZXR10 5960-56QU-HC','ZTE-M6000-8S plus','ZTE-9916']:  # ZTE RS\n        result = ZTE_RS_change_passwd(self, task_vars)\n    elif host_model in ['Eudemon9000E-X8-AC','Eudemon9000E-X4-AC','Eudemon9000E-X8','Eudemon9000E-X4','HW-Eudemon9000E-X4','HW-Eudemon9000E-X8']:  # huawei FW\n        result = HW_FW_change_passwd(self, task_vars)\n    elif host_model in ['S6850-56HF','S6900-54QF-F','S5560X-54C-EI','H3C-S5560X-54C-EI']:  # H3C RS\n        result = H3C_RS_change_passwd(self, task_vars)\n    elif host_model in ['S12508F-AF','S12516F-AF']:  # H3C Gaoduan RS\n        result = H3C_RSGD_change_passwd(self, task_vars)\n    elif host_model in ['M9016-V','M9008-S','h3c_m9008','CR16010H-FA']: #H3C FW\n        result = H3C_FW_change_passwd(self, task_vars)\n    elif host_model in ['s4320', 'S4230-54TXF', 'MAIPU-S4230-54TXF']:  # MP\n        result = MP_change_passwd(self, task_vars)\n    elif host_model in ['RG-S6250-48XS8CQ','RG-S6510-48VS8CQ','RG-N18010-X','RG-N18018-X']:\n        result = Ruijie(self, task_vars)\n    else:\n        result = not_support_dev_model(host_model)\n    return result\n\n\ndef not_support_dev_model(host_model):\n    return  {\n        'failed': False,\n        'stdout': \"该巡检项暂不支持{}设备\".format(host_model)\n    }\n\n\n# 'ce12800', 'ce68', 'ne40e', 'ce16800'\ndef HW_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    sys\n    aaa\n    local-user wlyywgzt_devops password cipher xc23@#WE111234567891011\n    commit\n    return\n    save\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['be written to the device.']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n#'Eudemon9000E'\ndef HW_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Warning: The current configuration will be written to the device']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n# 'zte_9900', 'zte_59', '5952D'\ndef ZTE_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef H3C_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n##高端H3C设备\ndef H3C_RSGD_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\ndef H3C_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef MP_change_passwd(self, task_vars):\n    str1=\"\"\"\n    configure terminal\n    local-user wlyywgzt_devops class manager\n    password 0 xc23@#WE11\n    end\n    write\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"enable\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['password']\n            self._task.args['answer'] = ['Nfv@1#2%']\n        elif \"write\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Are you sure to overwrite .*']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\ndef Ruijie(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n",
        "scriptBase64Code": ""
      },
      {
        "id": "5d5e6492c41e4228bf42f1be10ceaefe",
        "createBy": "10149",
        "createDate": "2023-03-22 11:16:00",
        "updateBy": "10149",
        "updateDate": "2023-03-22 11:16:20",
        "remarks": null,
        "orders": null,
        "isNewRecord": false,
        "parent": {
          "id": "0",
          "createBy": null,
          "createDate": null,
          "updateBy": null,
          "updateDate": null,
          "remarks": null,
          "orders": null,
          "isNewRecord": false,
          "parent": null,
          "treeLevel": null,
          "jobName": null,
          "type": null,
          "templateId": null,
          "nodeId": null,
          "nodeName": null,
          "jobQueue": null,
          "jobLabel": null,
          "status": null,
          "targetHost": null,
          "hostCount": null,
          "okCount": null,
          "failCount": null,
          "unreachableCount": null,
          "taskCount": null,
          "finishedCount": null,
          "newestTaskNum": null,
          "newestTaskName": null,
          "duration": null,
          "executeDate": null,
          "parentId": null,
          "beginDate": null,
          "endDate": null,
          "userId": null,
          "scriptId": null,
          "scriptVersion": null,
          "scriptType": null,
          "scriptName": null,
          "scriptCode": null,
          "scriptBase64Code": null
        },
        "treeLevel": 0,
        "jobName": "console密码修改完整版-脚本执行",
        "type": null,
        "templateId": null,
        "nodeId": null,
        "nodeName": null,
        "jobQueue": null,
        "jobLabel": "0",
        "status": "complete",
        "targetHost": "0e0c780c97cb4769a32371baf9c7f1fd,1592014940a847bba767f29186de4ba1,2e14d5e16f934192aed024fc55ee8727,394a429282624ed8995fa29a5c551625,4006a3a2309e497ea73451a3f480754d,57bdab676103446b9ef00f04325884bc,6524907e7948402f94084e67da1028c5,6c6617497ff1424b92da793c1f3b0a9c,812300a1371643e09a461a5b0bd0a7e5,8f36a65dec87495eb15df90799af992b,9ea94dc97b5647dca5532b7a46790f74,a4bf625e50ef4d5cafa2b9ce501b08df,b1ecdb88c2304f1c9dc896435234187b,c5b0a535d4334c9db3a310122f6248b1,e50e913de325421a9f1df60225642de3,f149aee0e90c453c9b0c9231aab27b62,11d33efbf3dc4c2eafcd88d9066d72ee,1cd47aeda4954954bc58481ee05518a4,313a7647ee5e494a9fdb82dfdb27d446,3ad4922527354eee99df512ca2fd5072,41e2904c954245b7a448633a2a3492d9,59ca1bc8258741eab712b25151072727,658141b851c74b238ff329e301bd755a,743e9c0b43ef4729abf94d68b05aac0a,85ee0126f69c4feb877a6c8a4c0f413b,9644570d6ef3413cb17051d22af45076,9fa441a16b8f41e68552b778a56dc96a,a79689f60a444e1da353d4aa1aad1ffa,bb909612a2b845b8b367c8f4bdc9f96e,cf0641795bbe45d78e032147ec497c64,e7c9cab46a654c8087b29da25f3330d0,f46390adaf89401faec65da3cdec793d,13457b81a17d4ae2bdecf1d287c3fae6,25941bcc5d9040fb8361c58b0edd1b49,37a30a32b7574f2b99baa21a34095d80,3ae544f01b7a4867bebd60b7a410a3c3,4782ba710f2b40a29f90417c30056802,61fa1c72eb2f43d797cf6018cc1c8675,6672457e5de5478989fa36371a1eeda1,748b3476f14a4883a0a87975dfec3285,87239bf8498b4117bbe38eb82e73cfad,9741742a2fab4701924cb925b99a4efd,a34e2a246ac04e62b5f842519f24a56e,ac18d9153c5f410e82659de9e602fdd0,c1b8251dfb384b6bb29601613341f046,d3c7bc7b4f9e4463b4082bfcd32fa037,ea715333e56b4ec2be2403fddf9d3295,fc286e44ac1b4929af5e5dcff7c3a9bd,090282956fe7409bb503486a51507c55,153f51e0165a406cbfa201667a581f81,266bfd371a7a4aa0aca4a25ed024dd67,386a6aa566c7498ba3e4641137a170de,3e910d1c040e4584ae25d907da1d7da0,5722d5eb87ef413d9fcc584eae842f46,62719242f7984b3ebf6827651c561431,6bc51c4932834fb8a86f1967bce6aafa,7c51218dfc1f469da9c195946c4489a7,8f055e3b06284bb7a0dfcfeda768683f,9b21ff3c8c2b485da243da0c55408f39,a438f3608523405c88e1863d027370ae,aca0f8e632104772b5e97cd0b8f9261f,c42dc5c5edf44d76924bb67cd35b5a3a,df77c4ec64904c14818fff9cb9a55dcc,edfbbcfa2232424fa66d9c276d981dae",
        "hostCount": 64,
        "okCount": 64,
        "failCount": 0,
        "unreachableCount": 0,
        "taskCount": 1,
        "finishedCount": 0,
        "newestTaskNum": 1,
        "newestTaskName": "console密码修改完整版-脚本执行",
        "duration": 20,
        "executeDate": "2023-03-22",
        "parentId": "0",
        "beginDate": null,
        "endDate": null,
        "userId": null,
        "scriptId": null,
        "scriptVersion": null,
        "scriptType": "forward_online_script",
        "scriptName": null,
        "scriptCode": "# version: Python3\n###################################################################################################\n# _task.args字典说明\n#     command: 发送到远端网络设备的命令。\n#\n# result字典说明:\n#     failed: 布尔值, 命令是否执行成功。\n#     stdout: 命令的标准输出。\n#     msg: 命令的错误输出。\n###################################################################################################\n# please edit your code here:\nimport re\nimport json\n\ndef main(self, task_vars):\n    # raise Exception(task_vars['ansible_network_os'])\n    host_model = task_vars['ansible_host_model']\n    \n    result = dict()\n    if host_model in ['ce12800', 'ce68', 'ne40e', 'ce16800']:  # Huawei RS\n        result = HW_RS_change_passwd(self, task_vars)\n    elif host_model in ['ZXR10 5960-72DL-H','ZXR10 9908','ZXR10 M6000-8S Plus','ZXR10 M6000-18S','zte_9900', 'zte_59', '5952D','m6000','M6000-8S Plus','5900','ZTE-5960','5960-56QU-HC','ZXR10 5960-72DL-HM','ZXR10 5960-56QU-HC','ZTE-M6000-8S plus','ZTE-9916']:  # ZTE RS\n        result = ZTE_RS_change_passwd(self, task_vars)\n    elif host_model in ['Eudemon9000E-X8-AC','Eudemon9000E-X4-AC','Eudemon9000E-X8','Eudemon9000E-X4','HW-Eudemon9000E-X4','HW-Eudemon9000E-X8']:  # huawei FW\n        result = HW_FW_change_passwd(self, task_vars)\n    elif host_model in ['S6850-56HF','S6900-54QF-F','S5560X-54C-EI','H3C-S5560X-54C-EI']:  # H3C RS\n        result = H3C_RS_change_passwd(self, task_vars)\n    elif host_model in ['S12508F-AF','S12516F-AF']:  # H3C Gaoduan RS\n        result = H3C_RSGD_change_passwd(self, task_vars)\n    elif host_model in ['M9016-V','M9008-S','h3c_m9008','CR16010H-FA']: #H3C FW\n        result = H3C_FW_change_passwd(self, task_vars)\n    elif host_model in ['s4320', 'S4230-54TXF', 'MAIPU-S4230-54TXF']:  # MP\n        result = MP_change_passwd(self, task_vars)\n    elif host_model in ['RG-S6250-48XS8CQ','RG-S6510-48VS8CQ','RG-N18010-X','RG-N18018-X']:\n        result = Ruijie(self, task_vars)\n    else:\n        result = not_support_dev_model(host_model)\n    return result\n\n\ndef not_support_dev_model(host_model):\n    return  {\n        'failed': False,\n        'stdout': \"该巡检项暂不支持{}设备\".format(host_model)\n    }\n\n\n# 'ce12800', 'ce68', 'ne40e', 'ce16800'\ndef HW_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    sys\n    aaa\n    local-user wlyywgzt_devops password cipher xc23@#WE1112345678910\n    commit\n    return\n    save\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['be written to the device.']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n#'Eudemon9000E'\ndef HW_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Warning: The current configuration will be written to the device']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n# 'zte_9900', 'zte_59', '5952D'\ndef ZTE_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef H3C_RS_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n##高端H3C设备\ndef H3C_RSGD_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\ndef H3C_FW_change_passwd(self, task_vars):\n    str1=\"\"\"\n    dis version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"save\" in cmd:\n            self._task.args['check_all'] = True\n            # self._task.args['prompt'] = [' Are you sure','press the enter key','continue the save operation']\n            # self._task.args['answer'] = ['y','\\n','y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\n\ndef MP_change_passwd(self, task_vars):\n    str1=\"\"\"\n    configure terminal\n    local-user wlyywgzt_devops class manager\n    password 0 xc23@#WE11\n    end\n    write\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        if \"enable\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['password']\n            self._task.args['answer'] = ['Nfv@1#2%']\n        elif \"write\" in cmd:\n            self._task.args['check_all'] = True\n            self._task.args['prompt'] = ['Are you sure to overwrite .*']\n            self._task.args['answer'] = ['y']\n        else:\n            self._task.args['check_all'] = False\n            self._task.args['prompt'] = []\n            self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n\n\ndef Ruijie(self, task_vars):\n    str1=\"\"\"\n    show version\n    \"\"\"\n    cmds = [i.strip() for i in str1.splitlines() if i]\n    msg=\"\"  #记录输出结果\n    err_msg=\"\"   #记录配置失败输出结果\n    original_msg = \"\"\n    has_failed = False\n    for cmd in cmds:\n        self._task.args['check_all'] = False\n        self._task.args['prompt'] = []\n        self._task.args['answer'] = []\n        self._task.args['command'] = cmd\n        result = self.execute_cmd(task_vars)\n        \n        if not result.get('failed'):\n            msg += cmd + '\\n' + result.get('stdout')+'\\n'\n            original_msg += msg\n        else:\n            has_failed = True\n            err_msg += cmd + result.get('msg') + '\\n'\n            original_msg += err_msg\n            break\n        \n    if has_failed:\n        result['msg'] = err_msg\n        result['original_message'] = original_msg\n    else:\n        result['stdout'] = msg\n        \n    return result\n",
        "scriptBase64Code": ""
      }
    ],
    "total": 205,
    "size": 10,
    "current": 1,
    "orders": [],
    "optimizeCountSql": true,
    "hitCount": false,
    "countId": null,
    "maxLimit": null,
    "searchCount": true,
    "pages": 21
  }
}